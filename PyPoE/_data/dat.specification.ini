# =============================================================================
# Overview
# =============================================================================
# .dat specifications for the GGG Path of Exile client
#
# =============================================================================
# About .dat files
# =============================================================================
# .dat files are basically a binary database. They have a fixed width data
# section and a variable width data section.
#
# The header of the file contains the number of rows and the size of the rows,
# so we can determine with certainty how large it would be. Together this is
# fixed size data section.
#
# The variable size section starts with a magic keyword 0xBBbbBBbbBBbbBB and
# then is just filled with the data (which can not be read properly without
# understanding the fixed width section - all data is referenced).
#
# Note that some of the .dat files have been purposefully stripped of their
# rows and data so they can not be read.
#
# =============================================================================
# File Syntax
# =============================================================================
# [<FileName.dat>]       - Required. Name of the file (should end with .dat)
# [[fields]]             - Required.
# [[[<NameOfTheField>]]] - This will also be used to access in python on a key
#                          basis, so only change if it's wrong and give it a
#                          unique and meaningful name
#  type = <type>         - Required. The type. See Type Syntax below
#  key = <KeyFile.dat>   - Optional. Name of the file that is referenced. Must
#                          exist.
#  key_id = <string>     - Optional. Name of the column in the other dat file
#                          that is referenced. Slow.
#  key_offset = <int>    - Optional. Offset at which the key of the other file
#                          starts.
#                          This generally useful when it's a key_id value, but
#                          the keys are numbered rowid+1 for example (so offset
#                          would be 1).
#                          Use this option for speedups.
#  unique = <bool>       - Optional. Marks the field to be unique.
#                          Default: False
#  file_path = <bool>    - Optional. Marks the field to be a file path.
#                          Note it should be True for virtual paths as well
#                          Default: False
#  file_ext = <string>   - Optional. Extension of the File.
#                          Should be specified if file_path is specified and
#                          the values are not virtual paths.
#                          Default: '' (empty string
#  display =             - Optional. A string to use for the display; it can be
#                          used to give a more detailed column heading
#  display_type =        - Optional. Python formatter syntax for output.
#  description =         - Optional. Description of that this field does.
# [[virtual_fields]]     - Optional. Section for virtual fields.
#                          Virtual fields are based off the fields in the field
#                          section to provide convience access
# [[[<NameOfTheField>]]] - Required. Name to access the virtual field.
#                          Must not be a duplicate of fields specified in
#                          fields.
#  fields                - Required. List of fields to coerce into one field.
#                          All fields must be exist, but they can be either
#                          a regular or virtual field or combination of.
#  zip                   - Optional. Whether to zip the fields together.
#                          This option requires each of the referenced fields
#                          to be a list.
#                          Default: False
#
# =============================================================================
# Type Syntax
# =============================================================================
# I've mostly adapted the Syntax from VisualGGPK2, but it may be subject to
# change to the python struct data types; for now they'll stay since bool is
# most certainly more readable then ?.
#
# Base types:
# bool   - 8 bit integer value, first bit is 1 or 0 (cocered to True/False)
# byte   - 8 bit integer value, signed
# ubyte  - 8 bit integer value, unsigned
# short  - 16 bit integer value, signed
# ushort - 16 bit integer value, unsigned
# int    - 32 bit integer value, signed
# uint   - 32 bit integer value, unsigned
# long   - 64 bit integer value, signed
# ulong  - 64 bit integer value, unsigned
# float  - 32 bit floating point value, single precision
# double - 64 bit floating point value, double precision
#
# Variable/Pointer types:
# ref|<other>      - 32 bit value, unsigned
#                    a pointer to the data section
# ref|list|<other> - two 32 bit values, unsigned
#                    first value determines the size of the list
#                    second value is the pointer to the data section
# ref|string       - just like a normal reference, but it will parse as null
#                    terminated utf16_le encoded string
#
# =============================================================================
# Style Guide
# =============================================================================
# Fields should be named with a proper name. CamelCase should be used on the all
# the keys.
#
# Related values should be have a prefix which is separated by a underscore.
# For example, if there are two columns one of which provides a list of Ids and
# the other provides a list of Values, you'd do something like:
#  MyValue_Ids
#  MyValue_Values
#
# Unknown what the field does, replace N:
#  Index<N>   - for unknown strings (ref|string)
#  Unknown<N> - for unknown values (byte, short, int, long & unsigned variants)
#  Data<N>    - for unknown data (ref|list)
#  Flag<N>    - for unknown boolean values (bool)
#  Key<N>     - for unknown keys (likely to be a key, ulong type)
#
# Known what the key does:
#  <WhatAmI>      - use a good name. For example ItemLevel if the key is item
#                   level
#  <OtherDat>Key  - If you know this field references another dat file use this
#                   naming; for example WorldAreasKey
#  <OtherDat>Keys - Similar to above, but use this for a list of keys
#  <EXT>File      - Use this for a ref|string that contains a file path
#                   Replace <EXT> with the extension of the file, for example:
#                   DDSFile for a file with the .dds extension
#  Id             - Use this for primary key value. Usually also the first value
#                   in a row
#                   
#
#
# =============================================================================
# Editing guide
# =============================================================================
# New file:
# Use int or uint types if you have a new .dat and fill it up until the data
# size (pad with short/byte if necessary).
#
# Finding out the proper type:
# - an int field followed by a all 0 field is usually an ulong reference key
#   - this also applies to lists, i.e. a ref|list|uint with each entry followed
#     by a zero is probably a ref|list|ulong instead (and a key).
# - an int field with ever increasing numbers not larger then data section is
#   a pointer to the data section. If preceeded by a value > 0, it may be a
#   list; otherwise it may be a string
#   - if the value is increasing but out of bounds, the int may be at the wrong
#     position, i.e. preceeded by byte(s) or short.
# - list and strings may be empty
#   - multiple empty lists may point at the same position in the data
#   - empty strings will still take up 4 bytes of space (the zero terminator)
# - if you see there are gaps or overlapping values in data section, considering
#   increasing/decreasing the type accordingly (i.e. from ref|uint to ref|ulong)
#   - if that doesn't help, the key might not be a reference
#
# Finding out the proper meaning:
# - First of all, mind the game! A lot can be deducted from knowing the game
#   well.
# - Keep the name of the file in mind;
#   - it's common for files to have references to other related files (i.e. a
#     xxxMasterMission is most likely to contain a reference to Master.dat
#     somewhere)
#   - the values will usually relate the file name obviously; i.e. will contain
#     stats/mods for the items, their visuals, and so on
#     - often these are supplied as keys (or Key1, Key2, Value1, Value2 ...)
# - Look at the minimum and maximum of the values; often they only have a
#   specific range which can hint at their meaning
#   - 0 to 100 can often be Level related
#   - Values with a base line of 1000 (or more rarely 100) above 0 are often
#     spawn chance or weighting related.
# - Values often appear as pairs, for example:
#   - Spawn Weight
#     - ref|list|ulong -> Tags.dat keys
#     - ref|list|int -> Values
#   - Stats
#    - ulong -> Stat key
#    - int -> Value (sometimes 2x for min/max rollable range)
#
#
# Regarding references/keys to other files:
# - Generally for their type:
#   - ulong if referencing another file
#   - uint if referencing the same file
#   - None (0xFEFEFEFE) is a pretty solid giveaway
# - Offsets:
#   - Usually the other dat file, starting at 0 (offset not needed, default)
#   - If the file has been blanked or if it referencing a specific column,
#     often it uses offset 1
# - Finding out what they reference to:
#   - if the keys is very small it's likely to refer to a file with little
#     entries (like difficulty, master, etc), like wise for big keys.
#   - based on what the file does related files can often be deducted
#   - references to Tags.dat and Mods.dat are very common
# - if possible, test the references out and see if they make sense
#
# Lastly, I suppose you could also try to reverse engineer the PathOfExile.exe
# and see whether you find any structs for the files.
#
# Have Fun.

[AchievementItems.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Name]]]
            type = ref|string
        [[[CompletionsRequired]]]
            type = int
        [[[AchievementsKey]]]
            type = ulong
            key = Achievements.dat
        # Todo some kind of flag related to "all"
        [[[Flag0]]]
            type = bool
[AchievementSetRewards.dat]
    [[fields]]
        [[[AchievementSetsDisplayKey]]]
            type = int
            key = AchievementSetsDisplay.dat
            key_id = Id
            key_offset = 1
        [[[Unknown1]]]
            type = int
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Unknown2]]]
            type = int
[AchievementSets.dat]
    [[fields]]
[AchievementSetsDisplay.dat]
    [[fields]]
        [[[Id]]]
            type = int
            unique = True
        [[[Title]]]
            type = ref|string
[Achievements.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Description]]]
            type = ref|string
        [[[AchievementSetsDisplayKey]]]
            type = int
            key = AchievementSetsDisplay.dat
            key_id = Id
            key_offset = 1
        [[[Objective]]]
            type = ref|string
        [[[UnknownUnique]]]
            type = int
            unique = True
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[Flag2]]]
            type = bool
        [[[Flag3]]]
            type = bool
        [[[Unknown3]]]
            type = int
        [[[Flag4]]]
            type = bool
[ActiveSkills.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[DisplayedName]]]
            type = ref|string
        [[[Description]]]
            type = ref|string
        [[[Index3]]]
            type = ref|string
        [[[Icon_DDSFile]]]
            type = ref|string
            file_path = True
            file_ext = .dds
        # keys to (empty) ActiveSkillTargetTypes.dat with offset 1
        [[[ActiveSkillTargetTypes]]]
            type = ref|list|uint
        # keys to (empty) ActiveSkillType.dat with offset 1
        [[[ActiveSkillTypes]]]
            type = ref|list|uint
        [[[WeaponRestriction_ItemClassesKeys]]]
            type = ref|list|ulong
            key = ItemClasses.dat
        [[[WebsiteDescription]]]
            type = ref|string
        [[[WebsiteImage]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
        [[[Unknown13]]]
            type = ref|string
        [[[Flag1]]]
            type = bool
        [[[SkillTotemId]]]
            type = int
            description = """This links to SkillTotems.dat, but the number may
exceed the number of entries; in that case it is player skill."""
            # key = SkillTotems.dat
            # key_offset = 1
        [[[IsManuallyCasted]]]
            type = bool
        [[[Input_StatKeys]]]
            type = ref|list|ulong
            key = Stats.dat
            description = "Stats that will modify this skill specifically"
        [[[Output_StatKeys]]]
            type = ref|list|ulong
            key = Stats.dat
            description = "Stat an input stat will be transformed into"
        [[[Unknown19]]]
            type = ref|list|int
[ActiveSkillTargetTypes.dat]
    [[fields]]
[ActiveSkillType.dat]
    [[fields]]
[ArmourClasses.dat]
    [[fields]]
[ArmourSurfaceTypes.dat]
    [[fields]]
[ArmourTypes.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
[Ascendancy.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[ClassNo]]]
            type = int
        [[[CharactersKey]]]
            type = ulong
            key = Characters.dat
        [[[CoordinateRect]]]
            type = ref|string
            description = Coordinates in "x1,y1,x2,y2" format
        [[[RGBFlavourTextColour]]]
            type = ref|string
        [[[Name]]]
            type = ref|string
        [[[FlavourText]]]
            type = ref|string
        [[[OGGFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
[AtlasNode.dat]
    [[fields]]
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[X]]]
            type = float
        [[[Y]]]
            type = float
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[Unknown6]]]
            type = int
        [[[AtlasNodeKeys]]]
            type = ref|list|int
            key = AtlasNode.dat
        [[[Default_ItemVisualIdentityKey]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[Shaped_ItemVisualIdentityKey]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[FlavourText]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
[AtlasQuestItems.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[QuestFlags]]]
            type = int
        [[[LeagueQuestFlags]]]
            type = int
        [[[MapTier]]]
            type = int
[Attributes.dat]
    [[fields]]
[BackendErrors.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
[BaseItemTypes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[ItemClassesKey]]]
            type = ulong
            key = ItemClasses.dat
        [[[Width]]]
            type = int
        [[[Height]]]
            type = int
        [[[Name]]]
            type = ref|string
        [[[InheritsFrom]]]
            type = ref|string
            file_path = True
        [[[DropLevel]]]
            type = int
        [[[FlavourTextKey]]]
            type = ulong
            key = FlavourText.dat
        [[[Implicit_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Unknown1]]]
            type = int
        [[[SoundEffectsKey]]]
            type = ulong
            key = SoundEffects.dat
        [[[NormalPurchase_BaseItemTypesKeys]]]
            type = ref|list|uint
            key = BaseItemTypes.dat
        [[[NormalPurchase_Costs]]]
            type = ref|list|int
        [[[MagicPurchase_BaseItemTypesKeys]]]
            type = ref|list|uint
            key = BaseItemTypes.dat
        [[[MagicPurchase_Costs]]]
            type = ref|list|int
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        # Relating displaystyle it seems
        [[[Unknown2]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[ItemVisualIdentityKey]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[UnknownUnique]]]
            type = uint
            unique = True
            #display_type = 0x{0:X}
        [[[VendorRecipe_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
            description = "Achievement check when selling this item to vendors"
        [[[RarePurchase_BaseItemTypesKeys]]]
            type = ref|list|uint
            key = BaseItemTypes.dat
        [[[RarePurchase_Costs]]]
            type = ref|list|int
        [[[UniquePurchase_BaseItemTypesKeys]]]
            type = ref|list|uint
            key = BaseItemTypes.dat
        [[[UniquePurchase_Costs]]]
            type = ref|list|int
        [[[Unknown20]]]
            type = ref|string
        [[[Equip_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
            description = "Achievement check when equipping this item"
        [[[IsPickedUpByMonsters]]]
            type = bool
        [[[Data11]]]
            type = ref|list|int
[BeyondDemons.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            key = MonsterVarieties.dat
            type = ulong
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
[BindableVirtualKeys.dat]
    [[fields]]
        [[[KeyCode]]]
            type = int
        [[[Name]]]
            type = ref|string
        [[[Id]]]
            type = ref|string
[BloodTypes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[PETFile1]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[PETFile2]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[PETFile3]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[Key0]]]
            type = ulong
        [[[PETFile4]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[PETFile5]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[PETFile6]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[Key1]]]
            type = ulong
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Key2]]]
            type = ulong
        [[[PETFile7]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[PETFile8]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[PETFile9]]]
            type = ref|string
            file_path = True
            file_ext = .pet
[Bloodlines.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[MinZoneLevel]]]
            type = int
        [[[MaxZoneLevel]]]
            type = int
        [[[SpawnWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SpawnWeight_Values]]]
            type = ref|list|int
            description = 0 disables
        [[[Unknown8]]]
            type = int
        [[[BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[Unknown11]]]
            type = ref|list|int
        #TODO Verify
        [[[ItemWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[ItemWeight_Values]]]
            type = ref|list|int
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown20]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[Keys2]]]
            type = ref|list|ulong
        [[[Flag1]]]
            type = bool
[BuffCategories.dat]
    [[fields]]
[BuffDefinitions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Description]]]
            type = ref|string
        [[[Invisible]]]
            type = bool
        [[[Removable]]]
            type = bool
        [[[Name]]]
            type = ref|string
        [[[StatsKeys]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[Flag0]]]
            type = bool
        [[[Unknown2]]]
            type = int
        [[[Flag1]]]
            type = bool
        [[[Maximum_StatsKey]]]
            type = ulong
            key = Stats.dat
            description = "Stat that holds the maximum number for this buff"
        [[[Current_StatsKey]]]
            type = ulong
            key = Stats.dat
            description = "Stat that holds the current number for this buff"
        [[[Flag2]]]
            type = bool
        [[[Unknown5]]]
            type = int
        [[[BuffVisualsKey]]]
            type = ulong
            key = BuffVisuals.dat
        [[[Flag3]]]
            type = bool
        [[[Flag4]]]
            type = bool
        [[[Unknown7]]]
            type = int
        [[[Flag5]]]
            type = bool
        [[[Flag6]]]
            type = bool
        [[[Flag7]]]
            type = bool
        [[[Flag8]]]
            type = bool
        [[[Flag9]]]
            type = bool
        [[[BuffLimit]]]
            type = int
        # TODO: some acendancy related stuff. Timed buff? Nearby buff?
        [[[Flag10]]]
            type = bool
        [[[Unknown0]]]
            type = ref|string
        [[[IsRecovery]]]
            type = bool
[BuffGroups.dat]
    [[fields]]
[BuffMergeModes.dat]
    [[fields]]
[BuffVisualOrbTypes.dat]
    [[fields]]
[BuffVisuals.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[BuffDDSFile]]]
            type = ref|string
            file_path = True
            file_ext = .dds
        [[[EPKFile1]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[EPKFile2]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[MiscAnimatedKey]]]
            type = ulong
            key = MiscAnimated.dat
        [[[MiscAnimatedKey2]]]
            type = ulong
            key = MiscAnimated.dat
        [[[Unknown6]]]
            type = int
        [[[PreloadGroupsKeys]]]
            type = ref|list|ulong
            key = PreloadGroups.dat
        [[[Flag0]]]
            type = bool
[CharacterAudioEvents.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[QuestState]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Marauder_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Ranger_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Witch_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Duelist_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Shadow_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Templar_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Scion_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
        [[[Goddess_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
            description = For the Goddess Bound/Scorned/Unleashed unique
        [[[JackTheAxe_CharacterTextAudioKeys]]]
            type = ref|list|ulong
            key = CharacterTextAudio.dat
            description = For Jack the Axe unique
        [[[Flag0]]]
            type = bool
[CharacterPanelDescriptionModes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = ref|string
        [[[FormatString_Positive]]]
            type = ref|string
        [[[FormatString_Negative]]]
            type = ref|string
[CharacterPanelStatContexts.dat]
    [[fields]]
[CharacterPanelStats.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
        [[[StatsKeys1]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[CharacterPanelDescriptionModesKey]]]
            type = ulong
            key = CharacterPanelDescriptionModes.dat
        [[[StatsKeys2]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[StatsKeys3]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[CharacterPanelTabsKey]]]
            type = ulong
            key = CharacterPanelTabs.dat
        [[[Flag0]]]
            type = bool
        [[[Data4]]]
            type = ref|list|uint
[CharacterPanelTabs.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown2]]]
            type = int
        [[[Text]]]
            type = ref|string
[CharacterStartItems.dat]
    [[fields]]
        [[[CharacterStartStatesKey]]]
            type = ulong
            key = CharacterStartStates.dat
        [[[Unknown2]]]
            type = int
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Sockets]]]
            type = ref|list|int
            #TODO: Virtual Mapping to SOCKET_COLOUR
            description = Number and colour of the sockets (in order).
        [[[Socketed_SkillGemsKeys]]]
            type = ref|list|ulong
            key = SkillGems.dat
            descriptions = Skill Gems socketed into the starting items
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
            description = Mods that are applied to the starting item
        [[[InventoryIndex]]]
            type = ref|string
        [[[SlotX]]]
            type = int
        [[[SlotY]]]
            type = int
        [[[StackSize]]]
            type = int
            description = The size of the stack, i.e. number of wisdom scrolls
        [[[Links]]]
            type = ref|list|int
        [[[SkillGemLevels]]]
            type = ref|list|int
        [[[Flag0]]]
            type = bool
        [[[Key0]]]
            type = ulong
[CharacterStartQuestState.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[QuestKeys]]]
            type = ref|list|ulong
            key = Quest.dat
        [[[QuestStates]]]
            type = ref|list|int
            # Key
        [[[Keys1]]]
            type = ref|list|ulong
        [[[MapPinsKeys]]]
            type = ref|list|ulong
            key = MapPins.dat
        [[[Unknown9]]]
            type = ref|list|int
[CharacterStartStateSet.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
[CharacterStartStates.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Description]]]
            type = ref|string
        [[[CharactersKey]]]
            type = ulong
            key = Characters.dat
        [[[Level]]]
            type = int
        [[[PassiveSkillsKeys]]]
            type = ref|list|ulong
            key = PassiveSkills.dat
        [[[IsPVP]]]
            type = bool
        [[[CharacterStartStateSetKey]]]
            type = ulong
            key = CharacterStartStateSet.dat
        [[[Key1]]]
            type = ulong
        [[[Normal_CharacterStartQuestStateKeys]]]
            type = ref|list|ulong
            key = CharacterStartQuestState.dat
        [[[Cruel_CharacterStartQuestStateKeys]]]
            type = ref|list|ulong
            key = CharacterStartQuestState.dat
        [[[Merciless_CharacterStartQuestStateKeys]]]
            type = ref|list|ulong
            key = CharacterStartQuestState.dat
        [[[Unknown]]]
            type = byte
[CharacterTextAudio.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
        [[[SoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
[Characters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Name]]]
            type = ref|string
            unique = True
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[ACTFile]]]
            type = ref|string
            file_path = True
            file_ext = .act
        [[[BaseMaxLife]]]
            type = int
        [[[BaseMaxMana]]]
            type = int
        [[[WeaponSpeed]]]
            type = int
            description = Attack Speed in milliseconds
        [[[MinDamage]]]
            type = int
        [[[MaxDamage]]]
            type = int
        [[[MaxAttackDistance]]]
            type = int
        [[[Icon]]]
            type = ref|string
        [[[IntegerId]]]
            type = int
            unique = True
        [[[BaseStrength]]]
            type = int
        [[[BaseDexterity]]]
            type = int
        [[[BaseIntelligence]]]
            type = int
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Description]]]
            type = ref|string
        [[[StartSkillGem_BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Unknown13]]]
            type = int
        [[[Unknown14]]]
            type = int
        [[[Unknown15]]]
            type = int
        [[[Unknown16]]]
            type = int
        #TODO verify
        [[[CharacterSize]]]
            type = int
        [[[IntroSoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[StartWeapon_BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Unknown28]]]
            type = ref|int
        [[[TraitDescription]]]
            type = ref|string
[ChestClusters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[ChestsKeys]]]
            type = ref|list|ulong
            key = Chests.dat
        [[[Data1]]]
            type = ref|list|uint
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
[ChestEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Normal_EPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[Normal_Closed_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Normal_Open_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Magic_EPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[Unique_EPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[Rare_EPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[Magic_Closed_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Unique_Closed_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Rare_Closed_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Magic_Open_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Unique_Open_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Rare_Open_AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
[Chests.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[Flag0]]]
            type = bool
        [[[Unknown0]]]
            type = int
        [[[Name]]]
            type = ref|string
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Flag1]]]
            type = bool
        [[[Flag2]]]
            type = bool
        [[[Unknown4]]]
            type = int
        [[[Flag3]]]
            type = bool
        [[[Flag4]]]
            type = bool
        [[[Unknown5]]]
            type = int
        [[[Unknown_Keys]]]
            type = ref|list|ulong
        [[[Unknown_Values]]]
            type = ref|list|uint
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Flag5]]]
            type = bool
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[ChestEffectsKey]]]
            type = ulong
            key = ChestEffects.dat
        [[[MinLevel]]]
            type = int
        [[[Unknown19]]]
            type = ref|string
        [[[MaxLevel]]]
            type = int
        [[[Corrupt_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
            description = "Achievement item granted on corruption"
        [[[CurrencyUse_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
            description = "Achievement item checked on currency use"
        [[[Encounter_AchievementItemsKey]]]
            type = ref|list|ulong
            key = AchievementItems.dat
            description = "Achievement item granted on encounter"
        [[[Key4]]]
            type = ulong
[ClientStrings.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
[CloneShotVariations.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
[Commands.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Command]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
        [[[Command2]]]
            type = ref|string
[ComponentArmour.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ref|string
            unique = True
            key = BaseItemTypes.dat
            key_id = Id
            file_path = True
        [[[Armour]]]
            type = int
        [[[Evasion]]]
            type = int
        [[[EnergyShield]]]
            type = int
[ComponentAttributeRequirements.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ref|string
            unique = True
            key = BaseItemTypes.dat
            key_id = Id
            file_path = True
        [[[ReqStr]]]
            type = int
        [[[ReqDex]]]
            type = int
        [[[ReqInt]]]
            type = int
[ComponentCharges.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ref|string
            unique = True
            key = BaseItemTypes.dat
            key_id = Id
            file_path = True
        [[[MaxCharges]]]
            type = int
        [[[PerCharge]]]
            type = int
[CooldownBypassTypes.dat]
    [[fields]]
[CooldownGroups.dat]
    [[fields]]
[CraftingBenchCustomActions.dat]
    [[fields]]
[CraftingBenchOptions.dat]
    [[fields]]
        [[[NPCMasterKey]]]
            type = ulong
            key = NPCMaster.dat
        [[[Order]]]
            type = int
        [[[ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Cost_BaseItemTypesKeys]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[Cost_Values]]]
            type = ref|list|uint
        [[[MasterLevel]]]
            type = int
        [[[Name]]]
            type = ref|string
        # key to (empty) CraftingBenchCustomActions.dat with offset 1
        # out of range -> no custom action
        # 1 = "Remove Crafted Mods"
        # 2 = everything else (out of range)
        [[[CraftingBenchCustomAction]]]
            type = int
        [[[ItemClassesKeys]]]
            type = ref|list|ulong
            key = ItemClasses.dat
        [[[Sockets]]]
            type = int
        [[[SocketColours]]]
            type = ref|string
        [[[Links]]]
            type = int
        [[[ItemQuantity]]]
            type = int
        [[[Unknown1]]]
            type = ref|list|int
        [[[Description]]]
            type = ref|string
        [[[IsDisabled]]]
            type = bool
[CurrencyItems.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Stacks]]]
            type = int
        [[[CurrencyUseType]]]
            type = int
        [[[Action]]]
            type = ref|string
        [[[Directions]]]
            type = ref|string
        [[[FullStack_BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            description = Full stack transforms into this item
        [[[Description]]]
            type = ref|string
        [[[Usage_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Flag1]]]
            type = bool
        [[[CosmeticTypeName]]]
            type = ref|string
        [[[Possession_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Unknown17]]]
            type = ref|list|int
        [[[CurrencyTab_StackSize]]]
            type = int
        [[[Abbreviation]]]
            type = ref|string
[CurrencyStashTabLayout.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
[CurrencyUseTypes.dat]
    [[fields]]
[DailyMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[SpawnWeight]]]
            type = int
        [[[Description]]]
            type = ref|string
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[CharactersKeys]]]
            type = ref|list|ulong
            key = Characters.dat
            description = "Used for win as class mission types"
        [[[Unknown8]]]
            type = int
        # Can fairly safely assume this is PVP type thing. Most likely a
        # reference to PVPTypes.dat (which is blanked)
        [[[PVPTypesKey]]]
            type = int
            key = PVPTypes.dat
            key_offset = 1
[DailyOverrides.dat]
    [[fields]]
        [[[Unknown0]]]
            type = int
        [[[DailyMissionsKeys]]]
            type = ulong
            key = DailyMissions.dat
[DamageParticleEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[PETFile]]]
            type = ref|string
            file_path = True
            file_ext = .pet
[Dances.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = long
            key = BaseItemTypes.dat
        [[[CharactersKey]]]
            type = ulong
            key = Characters.dat
[DaressoPitFights.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Key0]]]
            display = Key - Type?
            type = ulong
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = ref|list|int
        [[[FlagUnknown0]]]
            type = bool
        [[[FlagUnknown2]]]
            type = bool
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown6]]]
            type = int
        [[[FlagUnknown3]]]
            type = bool
[Default.dat]
    [[fields]]
[DefaultMonsterStats.dat]
    [[fields]]
        #TODO
        [[[DisplayLevel]]]
            type = ref|string
        [[[Damage]]]
            type = float
        # Evasion/Accuracy verified with character sheet
        [[[Evasion]]]
            type = int
        [[[Accuracy]]]
            type = int
        [[[Life]]]
            type = int
        # Tested on monsters
        [[[Experience]]]
            type = int
        [[[AllyLife]]]
            type = int
        [[[DifficultyKey]]]
            type = ulong
            key = Difficulties.dat
[DescentExiles.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[CharactersKey]]]
            type = ulong
            key = Characters.dat
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown7]]]
            type = int
[DescentRewardChests.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[BaseItemTypesKeys1]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys2]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys3]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys4]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys5]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys6]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys7]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys8]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys9]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys10]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys11]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys12]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[BaseItemTypesKeys13]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[BaseItemTypesKeys14]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
[DescentStarterChest.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[CharactersKey]]]
            type = ulong
            key = Characters.dat
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[SocketColours]]]
            #TODO Virtual for constants.SOCKET_COLOUR
            type = ref|string
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
[DexIntMissionGuardMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        # Not Mods.
        [[[Key0]]]
            type = ulong
        [[[SpawnWeight]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[DexIntMissionGuards.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterPacksKey]]]
            type = ulong
            key = MonsterPacks.dat
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[DexIntMissionTargets.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[DexIntMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[KillTarget]]]
            type = bool
        [[[FailIfTargetKilled]]]
            type = bool
        [[[KillGuards]]]
            type = bool
        [[[FailIfGuardsKilled]]]
            type = bool
        [[[TimeLimit]]]
            type = int
            description = in milliseconds
        [[[Hostage_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[ChestFlag0]]]
            type = bool
        [[[ChestFlag1]]]
            type = bool
        [[[NPCTalkKey]]]
            type = long
            key = NPCTalk.dat
        [[[FailIfNoGuardsLeft]]]
            type = bool
        [[[Timer]]]
            type = int
            description = in milliseconds
        [[[Flag7]]]
            type = bool
        [[[AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Key0]]]
            type = ulong
        [[[Key1]]]
            type = ulong
[DexMissionMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[ModsKey]]]
            type = ref|list|long
            key = Mods.dat
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Flag2]]]
            type = bool
[DexMissionMonsters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterPacksKeys]]]
            type = ref|list|ulong
            key = MonsterPacks.dat
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Boss_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
[DexMissionTracking.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Flag0]]]
            type = bool
        [[[Unknown4]]]
            type = int
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[Unknown6]]]
            type = int
        [[[Unknown7]]]
            type = int
        [[[Flag1]]]
            type = bool
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
[DexMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[MagicChance]]]
            type = int
        [[[RareChance]]]
            type = int
        [[[UniqueMonsterCount]]]
            type = int
        [[[RareMonsterCount]]]
            type = int
        [[[MagicMonsterPackCount]]]
            type = int
[Difficulties.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Resistances]]]
            type = int
        [[[MinimumLevel]]]
            type = int
        [[[Text]]]
            type = ref|string
        [[[Prefix]]]
            type = ref|string
[DisplayMinionMonsterType.dat]
    [[fields]]
        [[[Id]]]
            type = int
            unique = Ture
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
[DivinationCardArt.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[VirtualFile]]]
            type = ref|string
            file_path = True
[DivinationCardStashTabLayout.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[IsEnabled]]]
            type = bool
[DropPool.dat]
    [[fields]]
        [[[Group]]]
            type = ref|string
            unique = True
        [[[Weight]]]
            type = int
[EclipseMods.dat]
    [[fields]]
        [[[Key]]]
            type = ref|string
            unique = True
        [[[SpawnWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SpawnWeight_Values]]]
            type = ref|list|int
        [[[ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[IsPrefix]]]
            type = bool
[Effectiveness.dat]
    [[fields]]
[EffectivenessCostConstants.dat]
    [[fields]]
[EndlessLedgeChests.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[BaseItemTypesKeys]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[SocketColour]]]
            #TODO Virtual constants.SOCKET_COLOUR
            type = ref|string
[Environments.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Base_AmbientSoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Base_ENVFile]]]
            type = ref|string
            file_path = True
            file_ext = .env
        [[[Corrupted_ENVFile]]]
            type = ref|string
            file_path = True
            file_ext = .env
        [[[Keys1]]]
            type = ref|list|ulong
        [[[Corrupted_AmbientSoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[AmbientSoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
[EssenceStashTabLayout.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = true
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[X]]]
            type = int
        [[[Y]]]
            type = int
        [[[IntId]]]
            type = int
            unique = true
        [[[SlotWidth]]]
            type = int
        [[[SlotHeight]]]
            type = int
        [[[IsUpgradableEssenceSlot]]]
            type = bool
[EssenceType.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[EssenceType]]]
            type = int
        [[[IsCorruptedEssence]]]
            type = bool
        [[[WordsKey]]]
            type = ulong
            key = Words.dat
[Essences.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Unknown1]]]
            type = ulong
        [[[Unknown2]]]
            type = ulong
        [[[Unknown3]]]
            type = ulong
        [[[Unknown4]]]
            type = ulong
        [[[Unknown5]]]
            type = ulong
        [[[Unknown6]]]
            type = ulong
        [[[Unknown7]]]
            type = ulong
        [[[Unknown8]]]
            type = ulong
        [[[Unknown9]]]
            type = ulong
        [[[Unknown10]]]
            type = ulong
        [[[Unknown11]]]
            type = ulong
        [[[ModsKey1]]]
            type = ulong
            key = Mods.dat
        [[[ModsKey2]]]
            type = ulong
            key = Mods.dat
        [[[Quiver_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Amulet1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Belt1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Belt3_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Gloves1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Boots1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[BodyArmour1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Helmet1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Shield1_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Unknown23]]]
            type = int
        [[[DropLevelMinimum]]]
            type = int
        [[[DropLevelMaximum]]]
            type = int
        [[[Monster_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[EssenceTypeKey]]]
            type = ulong
            key = EssenceType.dat
        [[[Tier]]]
            type = int
        [[[Unknown31]]]
            type = int
        [[[1Hand_ModsKey1]]]
            type = ulong
            key = Mods.dat
        [[[ModsKey13]]]
            type = ulong
            key = Mods.dat
        [[[ModsKey14]]]
            type = ulong
            key = Mods.dat
        [[[ModsKey15]]]
            type = ulong
            key = Mods.dat
        [[[2Hand_ModsKey1]]]
            type = ulong
            key = Mods.dat
        [[[Boots3_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Ranged_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Helmet2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[BodyArmour2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Boots2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Gloves2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Bow_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Wand_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[2Hand_ModsKey2]]]
            type = ulong
            key = Mods.dat
        [[[2Hand_ModsKey3]]]
            type = ulong
            key = Mods.dat
        [[[2Hand_ModsKey4]]]
            type = ulong
            key = Mods.dat
        [[[2Hand_ModsKey5]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey2]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey3]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey4]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey5]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey6]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey7]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey8]]]
            type = ulong
            key = Mods.dat
        [[[1Hand_ModsKey9]]]
            type = ulong
            key = Mods.dat
        [[[ItemLevelRestriction]]]
            type = int
        [[[Belt2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Amulet2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Ring_ModsKey]]]
            type = ulong
            key = Mods.dat
        # Ring? Jewel?
        [[[ModsKey41]]]
            type = ulong
            key = Mods.dat
        [[[Shield2_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[ModsKey43]]]
            type = ulong
            key = Mods.dat
        [[[IsScreamingEssence]]]
            type = bool
[EventSeason.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = int
        [[[RewardCommand]]]
            type = ref|string
[EventSeasonRewards.dat]
    [[fields]]
        [[[EventSeasonKey]]]
            type = ulong
            key = EventSeason.dat
        [[[Point]]]
            type = int
        [[[RewardCommand]]]
            type = ref|string
[ExperienceLevels.dat]
    [[fields]]
        [[[Index0]]]
            type = ref|string
        [[[Level]]]
            type = int
        [[[Experience]]]
            type = uint
[ExplodingStormBuffs.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[BuffDefinitionsKey1]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[Key0]]]
            type = ulong
        [[[StatValues]]]
            type = ref|list|int
        [[[Unknown7]]]
            type = int
        [[[Data1]]]
            type = ref|list|int
        [[[Unknown10]]]
            type = int
        [[[Unknown11]]]
            type = int
        [[[Unknown12]]]
            type = int
        [[[Friendly_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[MiscObjectsKey]]]
            type = ulong
            key = MiscObjects.dat
        [[[MiscAnimatedKey]]]
            type = ulong
            key = MiscAnimated.dat
        [[[BuffVisualsKey]]]
            type = ulong
            key = BuffVisuals.dat
        [[[Enemy_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown23]]]
            type = int
        [[[Unknown24]]]
            type = int
        [[[Unknown25]]]
            type = int
        [[[BuffDefinitionsKey2]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[IsOnlySpawningNearPlayer]]]
            type = bool
[ExtraTerrainFeatureFamily.dat]
    [[fields]]
[ExtraTerrainFeatures.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = ref|list|int
        [[[Unknown2]]]
            type = ref|list|int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = ref|list|int
        [[[Unknown5]]]
            type = ref|list|int
        # Extra terrain feature family perhaps?
        [[[Unknown6]]]
            type = int
        [[[Unknown7]]]
            type = int
[Flasks.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Name]]]
            type = ref|string
        [[[Group]]]
            type = int
        [[[LifePerUse]]]
            type = int
        [[[ManaPerUse]]]
            type = int
        [[[RecoveryTime]]]
            type = int
            description = 'in 1/10 s'
        [[[BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[BuffStatValues]]]
            type = ref|list|uint
[FlaskType.dat]
    [[fields]]
[FlavourText.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = int
        [[[Text]]]
            type = ref|string
[Footprints.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Active_AOFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .ao
        [[[Idle_AOFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .ao
[GameConstants.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Value]]]
            type = int
[GemTags.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Tag]]]
            type = ref|string
[GemTypes.dat]
    [[fields]]
[GlobalAudioConfig.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Value]]]
            type = int
        [[[Flag0]]]
            type = bool
[GlobalQuestFlags.dat]
    [[fields]]
[Grandmasters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            display = Id?
        [[[GMFile]]]
            type = ref|string
            file_path = True
            file_ext = .gm
        [[[AISFile]]]
            type = ref|string
            file_path = True
            file_ext = .ais
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[CharacterLevel]]]
            type = int
        [[[Flag0]]]
            type = bool
[GrantedEffectGroups.dat]
    [[fields]]
[GrantedEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[IsSupport]]]
            type = bool
        [[[Data0]]]
            type = ref|list|uint
        [[[SupportGemLetter]]]
            type = ref|string
        [[[Unknown0]]]
            type = int
        [[[Data1]]]
            type = ref|list|uint
        [[[Data2]]]
            type = ref|list|uint
        [[[Flag0]]]
            type = bool
        [[[Unknown1]]]
            type = uint
            display_type = 0x{:08x}
        [[[Unknown2]]]
            type = ref|list|int
        [[[Flag1]]]
            type = bool
        [[[Unknown3]]]
            type = int
        [[[CastTime]]]
            type = int
        [[[ActiveSkillsKey]]]
            type = ulong
            key = ActiveSkills.dat
        [[[Flag2]]]
            type = bool
        # Just for the "LesserShrine" triggered skill
        [[[Flag3]]]
            type = bool
[GrantedEffectsPerLevel.dat]
    [[fields]]
        [[[GrantedEffectsKey]]]
            type = ulong
            key = GrantedEffects.dat
        [[[Level]]]
            type = int
        [[[StatsKeys]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[Stat1Value]]]
            type = int
        [[[Stat2Value]]]
            type = int
        [[[Stat3Value]]]
            type = int
        [[[Stat4Value]]]
            type = int
        [[[Stat5Value]]]
            type = int
        [[[Stat6Value]]]
            type = int
        [[[Stat7Value]]]
            type = int
        [[[Stat8Value]]]
            type = int
        [[[LevelRequirement]]]
            type = int
        [[[ManaMultiplier]]]
            type = int
        [[[LevelRequirement2]]]
            type = int
        [[[LevelRequirement3]]]
            type = int
        [[[Quality_StatsKeys]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[Quality_Values]]]
            type = ref|list|int
            description = 'Based on 1000 quality.'
        [[[CriticalStrikeChance]]]
            type = int
        [[[ManaCost]]]
            type = int
        [[[DamageEffectiveness]]]
            type = int
            description = 'Damage effectiveness based on 0 = 100%'
        [[[StoredUses]]]
            type = int
        [[[Cooldown]]]
            type = int
        # key to (empty) CooldownBypassTypes.dat with offset 1
        # out of range -> no bypassing
        # Whirling Blades has 2 but no cooldown, so doesn't apply
        # 1 = Vigilant Strike
        # 2 = Flicker Strike, Whirling Blades
        # 3 = Cold Snap
        # 4 = other skills (out of range)
        [[[CooldownBypassType]]]
            type = int
            description = 'Charge type to expend to bypass cooldown (Endurance, Frenzy, Power, none)'
        [[[StatsKeys2]]]
            type = ref|list|ulong
            key = Stats.dat
            description = Used with a value of one
        # Only for trap support gem
        [[[Unknown30a]]]
            type = bool
        [[[VaalSouls]]]
            type = int
        [[[VaalStoredUses]]]
            type = int
        # key to (empty) CooldownGroups.dat with offset 1
        # out of range -> no shared cooldown
        # 1 = Warcries
        # 2-5 = some monster skills
        # 6 = other skills (out of range)
        [[[CooldownGroup]]]
            type = int
        # only > 0 for Blasphemy (to 35)
        [[[ManaReservationOverride]]]
            type = int
            description = 'Mana Reservation Override: #% (if # > 0)'
        [[[Unknown34]]]
            type = int
        [[[DamageMultiplier]]]
            type = int
            description = Damage multiplier in 1/10000 for attack skills
        [[[Unknown36]]]
            type = int
        [[[Unknown37]]]
            type = int
    [[virtual_fields]]
        [[[StatValues]]]
            fields = Stat1Value, Stat2Value, Stat3Value, Stat4Value, Stat5Value, Stat6Value, Stat7Value, Stat8Value
        [[[Stats]]]
            fields = StatsKeys, StatValues
            zip = True
        [[[QualityStats]]]
            fields = Quality_StatsKeys, Quality_Values
            zip = True
[HideoutDoodads.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Variation_AOFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .ao
        [[[FavourCost]]]
            type = int
        [[[MasterLevel]]]
            type = int
        [[[NPCMasterKey]]]
            type = ulong
            key = NPCMaster.dat
        [[[IsNonMasterDoodad]]]
            type = bool
        [[[Unknown1]]]
            type = int
        # Seem related to challenge totems
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
[HideoutInteractable.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Object]]]
            type = ref|string
            file_path = True
[Hideouts.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SmallWorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[NPCMasterKey]]]
            type = ulong
            key = NPCMaster.dat
        [[[MediumWorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[LargeWorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Unknown9]]]
            type = int
[ImpactSoundData.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Sound]]]
            type = ref|string
            description = "Located in Audio/SoundEffects. Format has SG removed and $(#) replaced with the number"
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
[IntMissionMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Keys0]]]
            type = ulong
        [[[Data2]]]
            type = ref|list|int
[IntMissionMonsters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Objective_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
[IntMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[Flag0]]]
            type = bool
        [[[Unknown6]]]
            type = int
        [[[Flag1]]]
            type = bool
        [[[Flag2]]]
            type = bool
        [[[Flag3]]]
            type = bool
        [[[Unknown8]]]
            type = int
        [[[MonsterPerSpawnCount]]]
            type = int
        [[[ObjectiveCount]]]
            type = int
        [[[Flag4]]]
            type = bool
        [[[Flag5]]]
            type = bool
        [[[Flag6]]]
            type = bool
        [[[Flag7]]]
            type = bool
        [[[Flag8]]]
            type = bool
        [[[Flag9]]]
            type = bool
        [[[Flag10]]]
            type = bool
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown13]]]
            type = int
[InvasionMonsterGroups.dat]
    [[fields]]
[InvasionMonsterRestrictions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Data0]]]
            type = ref|list|int
[InvasionMonsterRoles.dat]
    [[fields]]
[InvasionMonstersPerArea.dat]
    [[fields]]
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[Data0]]]
            type = ref|list|int
        [[[MonsterVarietiesKeys1]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[MonsterVarietiesKeys2]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
[ItemClasses.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Name]]]
            type = ref|string
        [[[Category]]]
            type = ref|string
[ItemExperiencePerLevel.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[ItemCurrentLevel]]]
            type = int
        [[[Experience]]]
            type = int
[ItemVisualEffect.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[DaggerEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[BowEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[OneHandedMaceEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[OneHandedSwordEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[Index5]]]
            type = ref|string
        [[[TwoHandedSwordEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[TwoHandedStaffEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        # Might be some unique identifier
        [[[Unknown0]]]
            type = int
            unique = True
        [[[TwoHandedMaceEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[OneHandedAxeEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[TwoHandedAxeEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[ClawEPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[PETFile]]]
            type = ref|string
            file_path = True
            file_ext = .pet
        [[[Flag1]]]
            type = bool
[ItemVisualIdentity.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[DDSFile]]]
            type = ref|string
            file_path = True
            file_ext = .dds
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[SoundEffectsKey]]]
            type = ulong
            key = SoundEffects.dat
            description = Inventory sound effect
        [[[UnknownUniqueInt]]]
            type = int
            unique = True
        [[[AOFile2]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[MarauderSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[RangerSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[WitchSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[DuelistDexSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[TemplarSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[ShadowSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[ScionSMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[MarauderShape]]]
            type = ref|string
        [[[RangerShape]]]
            type = ref|string
        [[[WitchShape]]]
            type = ref|string
        [[[DuelistShape]]]
            type = ref|string
        [[[TemplarShape]]]
            type = ref|string
        [[[ShadowShape]]]
            type = ref|string
        [[[ScionShape]]]
            type = ref|string
        [[[Unknown28]]]
            type = int
        [[[Unknown29]]]
            type = int
        [[[Pickup_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[SMFiles]]]
            type = ref|list|ref|string
            file_path = True
            file_ext = .sm
        [[[Identify_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[EPKFile]]]
            type = ref|string
            file_path = True
            file_ext = .epk
        [[[Corrupt_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[IsAlternateArt]]]
            type = bool
        # true for cybil and scoruge art
        [[[Flag2]]]
            type = bool
        [[[CreateCorruptedJewelAchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
[ItemisedVisualEffect.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[ItemVisualEffectKey]]]
            type = ulong
            key = ItemVisualEffect.dat
        [[[ItemVisualIdentityKey1]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[ItemVisualIdentityKey2]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Data1]]]
            type = ref|list|uint
        [[[Keys2]]]
            type = ref|list|ulong
        [[[Flag0]]]
            type = bool
        [[[Data3]]]
            type = ref|list|uint
[KillstreakThresholds.dat]
    [[fields]]
        [[[Kills]]]
            type = int
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
            description = Monster that plays the effect, i.e. the "nova" etc.
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
[LabyrinthAreas.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Normal_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Cruel_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Merciless_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Endgame_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
[LabyrinthExclusionGroups.dat]
    [[fields]]
        [[[Unknown1]]]
            type = int
[LabyrinthIzaroChests.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[ChestsKey]]]
            type = ulong
            key = Chests.dat
        # Spawn weight, min difficulty, max dificulty?
        [[[SpawnWeight]]]
            type = int
        [[[MinLabyrinthTier]]]
            type = int
        [[[MaxLabyrinthTier]]]
            type = int
[LabyrinthLadderRewards.dat]
    [[fields]]
        [[[Unknown0]]]
            type = int
        [[[Key0]]]
            type = ulong
[LabyrinthNodeOverrides.dat]
    [[fields]]
        [[[Id1]]]
            type = ref|string
        [[[Id2]]]
            type = ref|string
        [[[Data1]]]
            type = ref|list|int
        [[[Data2]]]
            type = ref|list|int
[LabyrinthRewards.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Unknown1]]]
            type = int
        [[[Key0]]]
            type = ulong
        [[[Unknown4]]]
            type = int
        [[[Key1]]]
            type = ulong
        [[[Unknown7]]]
            type = int
        [[[Unknown8]]]
            type = int
[LabyrinthSecretEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Buff_BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[Buff_Values]]]
            type = ref|list|int
        [[[OTFile]]]
            type = ref|string
            file_path = True
            file_ext = .ot
[LabyrinthSecretLocations.dat]
    [[fields]]
[LabyrinthSecrets.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Id2]]]
            type = ref|string
        [[[Data0]]]
            type = ref|list|int
        [[[Unknown5]]]
            type = int
        [[[Unknown6]]]
            type = int
        [[[LabyrinthSecretEffectsKeys0]]]
            type = ref|list|ulong
            key = LabyrinthSecretEffects.dat
        [[[LabyrinthSecretEffectsKeys1]]]
            type = ref|list|ulong
            key = LabyrinthSecretEffects.dat
        [[[LabyrinthSecretEffectsKeys2]]]
            type = ref|list|ulong
            key = LabyrinthSecretEffects.dat
        [[[Unknown13]]]
            type = int
        [[[LabyrinthSecretEffectsKeys3]]]
            type = ref|list|ulong
            key = LabyrinthSecretEffects.dat
        [[[Flag0]]]
            type = byte
        [[[Flag1]]]
            type = byte
        [[[Unknown0]]]
            type = int
        [[[Flag2]]]
            type = byte
        [[[Flag3]]]
            type = byte
        [[[Flag4]]]
            type = byte
        [[[Name]]]
            type = ref|string
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
[LabyrinthSection.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[Flag2]]]
            type = bool
        [[[Key0]]]
            type = ulong
[LabyrinthSectionLayout.dat]
    [[fields]]
        [[[LabyrinthSectionKey]]]
            type = ulong
            key = LabyrinthSection.dat
        [[[Unknown3]]]
            type = int
        [[[LabyrinthSectionLayoutKeys]]]
            type = ref|list|int
            key = LabyrinthSectionLayout.dat
        [[[LabyrinthSecretsKey0]]]
            type = ulong
            key = LabyrinthSecrets.dat
        [[[LabyrinthSecretsKey1]]]
            type = ulong
            key = LabyrinthSecrets.dat
        [[[LabyrinthAreasKey]]]
            type = ulong
            key = LabyrinthAreas.dat
        [[[Flags1]]]
            type = int
            display_type = 0x{0:X}
        [[[Flags2]]]
            type = int
            display_type = 0x{0:X}
        [[[LabyrinthNodeOverridesKey]]]
            type = ulong
            key = LabyrinthNodeOverrides.dat
[LabyrinthTrinkets.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[LabyrinthSecretsKey]]]
            type = ulong
            key = LabyrinthSecrets.dat
        [[[Buff_BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[Buff_Values]]]
            type = ref|list|int
[LeagueCategory.dat]
    [[fields]]
[LeagueFlag.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Image]]]
            type = ref|string
[LeagueQuestFlags.dat]
    [[fields]]
[LeagueTrophy.dat]
    [[fields]]
[MapConnections.dat]
    [[fields]]
        [[[MapPinsKey0]]]
            type = ulong
            key = MapPins.dat
        [[[MapPinsKey1]]]
            type = ulong
            key = MapPins.dat
        [[[Unknown2]]]
            type = int
        [[[RestrictedAreaText]]]
            type = ref|string
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
[MapDeviceRecipes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[BaseItemTypesKeys]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Unknown5]]]
            type = ulong
        [[[Unknown7]]]
            type = int
[MapInhabitants.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            key = Tags.dat
            key_id = Id
        [[[StatsKey]]]
            type = ulong
            key = Stats.dat
[MapPins.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[PositionX]]]
            type = int
            description = X starts at left side of image, can be negative
        [[[PositionY]]]
            type = int
            description = Y starts at top side of image, can be negative
        [[[NormalWaypoint_WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Normal_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Name]]]
            type = ref|string
        [[[Notes]]]
            type = ref|string
        [[[Data1]]]
            type = ref|list|uint
        [[[Act]]]
            type = int
        [[[Merciless_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Cruel_WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[CruelWaypoint_WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[MercilessWaypoint_WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Index3]]]
            type = ref|string
        [[[Unknown1]]]
            type = int
        [[[WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Unknown3]]]
            type = ref|list|int
[MapStashTabLayout.dat]
    [[fields]]
[Maps.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Regular_WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Unique_WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[MapUpgrade_BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[MonsterPacksKeys]]]
            type = ref|list|ulong
            key = MonsterPacks.dat
        [[[Key2]]]
            type = ulong
        [[[Regular_GuildCharacter]]]
            type = ref|string
        [[[Unique_GuildCharacter]]]
            type = ref|string
        [[[HigherTierMaps_BaseItemTypesKeys]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[Tier]]]
            type = int
        [[[Shaped_Base_MapsKey]]]
            type = int
            key = Maps.dat
        [[[Shaped_AreaLevel]]]
            type = int
        [[[MapsKey1]]]
            type = int
            key = Maps.dat
        [[[MapsKey2]]]
            type = int
            key = Maps.dat
        [[[MapsKey3]]]
            type = int
            key = Maps.dat
[MicrotransactionCharacterPortraitVariations.dat]
    [[fields]]
[MicrotransactionFireworksVariations.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = long
            key = BaseItemTypes.dat
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Flag0]]]
            type = bool
[MicrotransactionPortalVariations.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[MapAOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
[MicrotransactionSocialFrameVariations.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = long
            key = BaseItemTypes.dat
[MinimapIcons.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[Flag2]]]
            type = bool
[MiscAnimated.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[PreloadGroupsKeys]]]
            type = ref|list|ulong
            key = PreloadGroups.dat
        [[[Unknown1]]]
            type = int
[MiscBeams.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Key0]]]
            type = ulong
        [[[Unknown3]]]
            type = int
        [[[PreloadGroupsKeys]]]
            type = ref|list|ulong
            key = PreloadGroups.dat
        [[[Unknown1]]]
            type = int
[MiscObjects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[EffectVirtualPath]]]
            type = ref|string
            file_path = True
        [[[PreloadGroupsKeys]]]
            type = ref|list|ulong
            key = PreloadGroups.dat
        [[[UnknownUnique]]]
            type = int
        [[[Unknown1]]]
            type = int
[MissionTileMap.dat]
    [[fields]]
        [[[NPCMasterKey]]]
            type = ulong
            key = NPCMaster.dat
        [[[MissionKey]]]
            description = Depending on the master key
            type = ulong
            #key = xxxMission.dat
        [[[WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
[MissionTransitionTiles.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[TDTFile]]]
            type = ref|string
            file_path = True
            file_ext = .tdt
        # todo: x, y, z?
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
[ModAuraFlags.dat]
    [[fields]]
[ModDomains.dat]
    [[fields]]
[ModFamily.dat]
    [[fields]]
[ModGenerationType.dat]
    [[fields]]
[ModSellPriceTypes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
[ModSellPrices.dat]
    [[fields]]
        [[[ModSellPriceTypesKey]]]
            type = ulong
            key = ModSellPriceTypes.dat
        [[[BaseItemTypesKeys]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
[ModType.dat]
    [[fields]]
        [[[Name]]]
            type = ref|string
            unique = True
        [[[ModSellPricesKeys]]]
            type = ref|list|ulong
            key = ModSellPrices.dat
[Mods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = int
        [[[ModTypeKey]]]
            type = ulong
            key = ModType.dat
        [[[Level]]]
            type = int
        [[[StatsKey1]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey2]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey3]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey4]]]
            type = ulong
            key = Stats.dat
        [[[Domain]]]
            type = int
            enum = MOD_DOMAIN
        [[[Name]]]
            type = ref|string
        [[[GenerationType]]]
            type = int
            enum = MOD_GENERATION_TYPE
        [[[CorrectGroup]]]
            type = ref|string
        [[[Stat1Min]]]
            type = int
        [[[Stat1Max]]]
            type = int
        [[[Stat2Min]]]
            type = int
        [[[Stat2Max]]]
            type = int
        [[[Stat3Min]]]
            type = int
        [[[Stat3Max]]]
            type = int
        [[[Stat4Min]]]
            type = int
        [[[Stat4Max]]]
            type = int
        [[[SpawnWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SpawnWeight_Values]]]
            type = ref|list|uint
        [[[BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[BuffValue]]]
            type = int
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[GrantedEffectsPerLevelKey]]]
            type = ulong
            key = GrantedEffectsPerLevel.dat
        [[[Data1]]]
            type = ref|list|uint
        [[[Data2]]]
            type = ref|list|uint
        [[[MonsterMetadata]]]
            type = ref|string
            #key = MonsterVarieties.dat
            #key_id = Id
        [[[Data3]]]
            type = ref|list|int
        [[[Data4]]]
            type = ref|list|int
        [[[Key0]]]
            type = ulong
        [[[Stat5Min]]]
            type = int
        [[[Stat5Max]]]
            type = int
        [[[StatsKey5]]]
            type = ulong
            key = Stats.dat
        [[[Keys0]]]
            type = ref|list|ulong
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[GenerationWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[GenerationWeight_Values]]]
            type = ref|list|int
        [[[Data5]]]
            type = ref|list|int
        [[[IsEssenceOnlyModifier]]]
            type = bool
    [[virtual_fields]]
        [[[SpawnWeight]]]
            fields = SpawnWeight_TagsKeys, SpawnWeight_Values
            zip = True
        [[[Stat1]]]
            fields = StatsKey1, Stat1Min, Stat1Max
        [[[Stat2]]]
            fields = StatsKey2, Stat2Min, Stat2Max
        [[[Stat3]]]
            fields = StatsKey3, Stat3Min, Stat3Max
        [[[Stat4]]]
            fields = StatsKey4, Stat4Min, Stat4Max
        [[[Stat5]]]
            fields = StatsKey5, Stat5Min, Stat5Max
        [[[StatsKeys]]]
            fields = StatsKey1, StatsKey2, StatsKey3, StatsKey4, StatsKey5
        [[[Stats]]]
            fields = Stat1, Stat2, Stat3, Stat4, Stat5
        [[[GenerationWeight]]]
            fields = GenerationWeight_TagsKeys, GenerationWeight_Values
[MonsterAdditionalMonsterDrops.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Keys0]]]
            type = ref|list|ulong
[MonsterArmours.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        #TODO: this is a special case
        [[[ArtString_SMFile]]]
            type = ref|string
            file_ext = .sm
[MonsterBehavior.dat]
    [[fields]]
[MonsterFleeConditions.dat]
    [[fields]]
[MonsterGroupEntries.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[MonsterGroupNamesId]]]
            # TODO verify
            display = MonsterGroupNamesId?
            type = int
[MonsterGroupNames.dat]
    [[fields]]
# TODO: verify the StatXValue for MonsterMapXXX.dat
[MonsterMapBossDifficulty.dat]
    [[fields]]
        [[[MapLevel]]]
            type = int
        [[[Stat1Value]]]
            type = int
        [[[Stat2Value]]]
            type = int
        [[[StatsKey1]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey2]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey3]]]
            type = ulong
            key = Stats.dat
        [[[Stat3Value]]]
            type = int
        [[[StatsKey4]]]
            type = ulong
            key = Stats.dat
        [[[Stat4Value]]]
            type = int
    [[virtual_fields]]
        [[[Stat1]]]
            fields = StatsKey1, Stat1Value
        [[[Stat2]]]
            fields = StatsKey2, Stat2Value
        [[[Stat3]]]
            fields = StatsKey3, Stat3Value
        [[[Stat4]]]
            fields = StatsKey4, Stat4Value
        [[[Stats]]]
            fields = Stat1, Stat2, Stat3, Stat4
[MonsterMapDifficulty.dat]
    [[fields]]
        [[[MapLevel]]]
            type = int
        [[[Stat1Value]]]
            type = int
        [[[Stat2Value]]]
            type = int
        [[[StatsKey1]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey2]]]
            type = ulong
            key = Stats.dat
        [[[StatsKey3]]]
            type = ulong
            key = Stats.dat
        [[[Stat3Value]]]
            type = int
        [[[StatsKey4]]]
            type = ulong
            key = Stats.dat
        [[[Stat4Value]]]
            type = int
    [[virtual_fields]]
        [[[Stat1]]]
            fields = StatsKey1, Stat1Value
        [[[Stat2]]]
            fields = StatsKey2, Stat2Value
        [[[Stat3]]]
            fields = StatsKey3, Stat3Value
        [[[Stat4]]]
            fields = StatsKey4, Stat4Value
        [[[Stats]]]
            fields = Stat1, Stat2, Stat3, Stat4
[MonsterPackEntries.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterPacksKey]]]
            type = ulong
            key = MonsterPacks.dat
        [[[Flag0]]]
            type = bool
        [[[Unknown1]]]
            type = int
        [[[MonsterVarietiesKey]]]
            type = long
            key = MonsterVarieties.dat
[MonsterPacks.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[WorldAreasKeys]]]
            type = ref|list|ulong
            key = WorldAreas.dat
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[BossMonsterSpawnChance]]]
            type = int
        [[[BossMonsterCount]]]
            type = int
        [[[BossMonster_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Flag0]]]
            type = bool
        [[[Unknown11]]]
            type = int
        [[[Data1]]]
            type = ref|list|ref|string
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
[MonsterResistances.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[FireNormal]]]
            type = int
        [[[ColdNormal]]]
            type = int
        [[[LightningNormal]]]
            type = int
        [[[ChaosNormal]]]
            type = int
        [[[FireCruel]]]
            type = int
        [[[ColdCruel]]]
            type = int
        [[[LightningCruel]]]
            type = int
        [[[ChaosCruel]]]
            type = int
        [[[FireMerciless]]]
            type = int
        [[[ColdMerciless]]]
            type = int
        [[[LightningMerciless]]]
            type = int
        [[[ChaosMerciless]]]
            type = int
[MonsterScalingByLevel.dat]
    [[fields]]
[MonsterSegments.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Shapes]]]
            type = ref|string
[MonsterSize.dat]
    [[fields]]
[MonsterTypes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = int
        [[[IsSummoned]]]
            type = bool
        # Need to be verified
        [[[Armour]]]
            type = int
            display = 'Armour?'
        [[[Evasion]]]
            type = int
            display = 'Evasion?'
        [[[EnergyShieldFromLife]]]
            type = int
        [[[DamageSpread]]]
            type = int
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[MonsterResistancesKey]]]
            type = ulong
            key = MonsterResistances.dat
[MonsterVarieties.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[MonsterTypesKey]]]
            type = ulong
            key = MonsterTypes.dat
        [[[Unknown0]]]
            type = int
        [[[ObjectSize]]]
            type = int
        [[[MinimumAttackDistance]]]
            type = int
        [[[MaximumAttackDistance]]]
            type = int
        [[[ACTFile]]]
            type = ref|string
            file_path = True
            file_ext = .act
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[BaseMonsterTypeIndex]]]
            type = ref|string
            file_path = True
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Unknown1]]]
            type = int
        [[[UnknownIndex0]]]
            type = ref|string
        [[[UnknownIndex1]]]
            type = ref|string
        # Looking at tiny monsters or monsters that come in in various sizes
        # this seems to make most sense.
        [[[ModelSizeMultiplier]]]
            type = int
            description = in percent
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[Unknown6]]]
            type = int
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[ExperienceMultiplier]]]
            type = int
            description = in percent
        [[[Unknown7]]]
            type = ref|list|int
        [[[Unknown8]]]
            type = int
        [[[Unknown9]]]
            type = int
        [[[Unknown10]]]
            type = int
        [[[CriticalStrikeChance]]]
            type = int
        [[[Unknown11]]]
            type = int
        [[[GrantedEffectsKeys]]]
            type = ref|list|ulong
            key = GrantedEffects.dat
        [[[AISFile]]]
            type = ref|string
            file_path = True
            file_ext = .ais
        [[[ModsKeys2]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Stance]]]
            type = ref|string
        [[[Key2]]]
            type = ulong
        [[[Name]]]
            type = ref|string
        [[[DamageMultiplier]]]
            type = int
            description = in percent
        [[[LifeMultiplier]]]
            type = int
            description = in percent
        [[[AttackSpeed]]]
            type = int
            description = AttacksPerSecond is 1500/AttackSpeed
        [[[Weapon1_ItemVisualIdentityKeys]]]
            type = ref|list|ulong
            key = ItemVisualIdentity.dat
        [[[Weapon2_ItemVisualIdentityKeys]]]
            type = ref|list|ulong
            key = ItemVisualIdentity.dat
        [[[Back_ItemVisualIdentityKey]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[MainHand_ItemClassesKey]]]
            type = ulong
            key = ItemClasses.dat
        [[[OffHand_ItemClassesKey]]]
            type = ulong
            key = ItemClasses.dat
        [[[Key1]]]
            type = ulong
        # Stats.dat, Mods.dat make no sense
        [[[Helmet_ItemVisualIdentityKey]]]
            type = ulong
            key = ItemVisualIdentity.dat
        [[[Unknown13]]]
            type = int
        [[[AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Special_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
            description = "Keys for 'special' mods like untouchable by torment spirits."
        [[[AchievementItemsKeys2]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Unknown14]]]
            type = bool
        [[[Unknown15]]]
            type = int
        [[[Unknown16]]]
            type = int
        [[[Unknown17]]]
            type = int
        [[[Unknown18]]]
            type = int
        [[[Unknown19]]]
            type = int
        [[[Unknown20]]]
            type = int
        # Some unique identifier?
        [[[Unknown21]]]
            type = int
            unique = True
        [[[Unknown22]]]
            type = byte
        [[[Unknown23]]]
            type = ref|string
        # TODO: Key 5 to Key 7 Mods.dat ?
        [[[Normal_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
            description = "Achievement objective awarded for killing this monster in normal difficulty"
        [[[Merciless_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
            description = "Achievement objective awarded for killing this monster in merciless difficulty"
        [[[Cruel_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
            description = "Achievement objective awarded for killing this monster in cruel difficulty"
        [[[Flashback_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[MonsterSegmentsKey]]]
            type = ulong
            key = MonsterSegments.dat
        [[[MonsterArmoursKey]]]
            type = ulong
            key = MonsterArmours.dat
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[AchievementItemsKey4]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Normal_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Cruel_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Merciless_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[KillRareInNormal_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[KillRareInCruel_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[KillRareInMerciless_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Key3]]]
            type = ulong
        [[[CountKills_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
[Music.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
[MysteryPack.dat]
    [[fields]]
[MysteryPackItems.dat]
    [[fields]]
[NPCAudio.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = ref|list|int
        [[[Unknown2]]]
            type = ref|list|int
[NPCMaster.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[NPCsKey]]]
            type = ref|string
            unique = True
            key = NPCs.dat
            key_id = Id
            file_path = True
        [[[IsStrMaster]]]
            type = bool
        [[[IsDexMaster]]]
            type = bool
        [[[SignatureMod_ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[IsIntMaster]]]
            type = bool
        [[[Hideout]]]
            type = ref|string
            unique = True
            key = NPCs.dat
            key_id = Id
            file_path = True
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Unknown7]]]
            type = int
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[SignatureModSpawnWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SignatureModSpawnWeight_Values]]]
            type = ref|list|uint
        [[[UnknownWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[UnknownWeight_Values]]]
            type = ref|list|uint
        [[[Key2]]]
            type = ulong
        [[[Talisman_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[MasterLevel5_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
[NPCMasterExperiencePerLevel.dat]
    [[fields]]
        [[[NPCMasterKey]]]
            type = long
            key = NPCMaster.dat
        [[[MasterLevel]]]
            type = int
        [[[Experience]]]
            type = int
        [[[ItemLevel]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[Unknown6]]]
            type = int
[NPCShop.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = int
        [[[SoldItem_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SoldItem_Weights]]]
            type = ref|list|uint
        # TODO the next 3 values seem to be shop related, no idea what though
        [[[Data0_Keys0]]]
            type = ref|list|ulong
        [[[Data0_Values]]]
            type = ref|list|uint
        [[[Unknown10]]]
            type = int
        [[[Unknown11]]]
            type = ref|list|ulong
[NPCTalk.dat]
    [[fields]]
        [[[NPCKey]]]
            type = ulong
            key = NPCs.dat
        [[[Unknown2]]]
            type = int
        [[[DialogueOption]]]
            type = ref|string
        [[[Data0]]]
            type = ref|list|uint
        [[[Data1]]]
            type = ref|list|uint
        [[[Data2]]]
            type = ref|list|uint
        [[[Script]]]
            type = ref|string
        [[[Unknown11]]]
            type = int
        [[[Unknown12]]]
            type = int
        [[[QuestKey]]]
            type = ulong
            key = Quest.dat
        [[[Unknown15]]]
            type = int
        [[[Keys0]]]
            type = ref|list|ulong
        [[[NPCTextAudioKeys]]]
            type = ref|list|ulong
            key = NPCTextAudio.dat
        [[[Script2]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[Data5]]]
            type = ref|list|int
        [[[Data6]]]
            type = ref|list|int
        [[[Unknown25]]]
            type = byte
        [[[Flag2]]]
            type = bool
        [[[Unknown25c]]]
            type = int
        [[[Unknown26]]]
            type = int
        [[[Unknown27]]]
            type = short
        [[[Data7]]]
            type = ref|list|int
        [[[Unknown30]]]
            type = int
        [[[Flag3]]]
            type = bool
        [[[Key2]]]
            type = ref|list|ulong
[NPCTalkCategory.dat]
    [[fields]]
[NPCTextAudio.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[CharactersKey]]]
            type = long
            key = Characters.dat
        [[[Text]]]
            type = ref|string
        [[[Mono_AudioFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[Stereo_AudioFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[HasStereo]]]
            type = bool
        [[[Flag0]]]
            type = bool
[NPCs.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[Name]]]
            type = ref|string
        [[[Metadata]]]
            type = ref|string
            file_path = True
        [[[Unknown5]]]
            type = int
        [[[NPCMasterKey]]]
            type = ulong
            key = NPCMaster.dat
        [[[ShortName]]]
            type = ref|string
        [[[Unknown7]]]
            type = int
        [[[Unknown8]]]
            type = int
        [[[NPCShopKey]]]
            type = ulong
            key = NPCShop.dat
        [[[NPCAudioKey1]]]
            type = ulong
            key = NPCAudio.dat
        [[[NPCAudioKey2]]]
            type = ulong
            key = NPCAudio.dat
[NormalDifficultyMasterWeights.dat]
    [[fields]]
        [[[MasterID]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
[Notifications.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = bool
        [[[Unknown1]]]
            type = bool
        [[[Message]]]
            type = ref|string
        [[[Unknown2]]]
            type = ref|string
        [[[Unknown3]]]
            type = bool
        [[[Unknown4]]]
            type = int
[PassiveJewelSlots.dat]
    [[fields]]
        [[[PassiveSkillsKey]]]
            type = ulong
            key = PassiveSkills.dat
[PassiveSkills.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Icon_DDSFile]]]
            type = ref|string#
            file_path = True
            file_ext = .dds
        [[[StatsKeys]]]
            type = ref|list|ulong
            key = Stats.dat
        [[[Stat1Value]]]
            type = int
        [[[Stat2Value]]]
            type = int
        [[[Stat3Value]]]
            type = int
        [[[Stat4Value]]]
            type = int
        [[[PassiveSkillGraphId]]]
            type = int
            unique = True
            description = "Id used by PassiveSkillGraph.psg"
        [[[Name]]]
            type = ref|string
        [[[CharactersKeys]]]
            type = ref|list|ulong
            key = Characters.dat
        [[[IsKeystone]]]
            type = bool
        [[[IsNotable]]]
            type = bool
        [[[FlavourText]]]
            type = ref|string
        [[[IsJustIcon]]]
            type = bool
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[IsJewelSocket]]]
            type = bool
        [[[GrantedBuff_BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[Key2]]]
            type = ulong
        [[[BuffRelatedUnknown0]]]
            type = int
        [[[BuffRelatedUnknown1]]]
            type = ref|list|uint
        [[[AscendancyKey]]]
            type = ulong
            key = Ascendancy.dat
        [[[IsAscendancyStartingNode]]]
            type = bool
        [[[Reminder_ClientStringsKeys]]]
            type = ref|list|ulong
            key = ClientStrings.dat
        [[[SkillPointsGranted]]]
            type = int
        [[[IsMultipleChoice]]]
            type = bool
        [[[IsMultipleChoiceOption]]]
            type = bool
    [[virtual_fields]]
        [[[StatValues]]]
            fields = Stat1Value, Stat2Value, Stat3Value, Stat4Value
        [[[Stats]]]
            fields = StatsKeys, StatValues
            zip = True
[PathOfEndurance.dat]
    [[fields]]
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Unknown5]]]
            type = int
        [[[Unknown6]]]
            type = int
        [[[Keys0]]]
            type = ref|list|ulong
        [[[Data0]]]
            type = ref|list|int
[PerLevelValues.dat]
    [[fields]]
[PerandusBosses.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[SpawnWeight]]]
            type = int
[PerandusChests.dat]
    [[fields]]
        [[[ChestsKey]]]
            type = ulong
            key = Chests.dat
        [[[Unknown2]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[PerandusDaemons.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = ref|list|ulong
        [[[Flag0]]]
            type = bool
        [[[Unknown7]]]
            type = ref|list|ulong
[PerandusGuards.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[Unknown1]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[MonsterPacksKeys]]]
            type = ref|list|ulong
            key = MonsterPacks.dat
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = ref|list|uint
        [[[Unknown5]]]
            type = int
[Pet.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            file_path = True
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown1]]]
            type = int
[PreloadGroups.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
[PreloadPriorities.dat]
    [[fields]]
[ProjectileVariations.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ProjectileKey]]]
            type = ulong
            key = Projectiles.dat
[Projectiles.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
            virtual_path = True
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[LoopAnimationId]]]
            type = ref|string
        [[[ImpactAnimationId]]]
            type = ref|string
        [[[ProjectileSpeed]]]
            type = int
        [[[Index4]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
        [[[Unknown6]]]
            type = int
        [[[Flag1]]]
            type = bool
        [[[Flag2]]]
            type = bool
[Prophecies.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[PredictionText]]]
            type = ref|string
        [[[UnknownUnique]]]
            type = int
            unique = True
        [[[Name]]]
            type = ref|string
        [[[FlavourText]]]
            type = ref|string
        [[[QuestTracker_ClientStringsKeys]]]
            type = ref|list|ulong
            key = ClientStrings.dat
        [[[OGGFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[ProphecyChainKey]]]
            type = ulong
            key = ProphecyChain.dat
        [[[ProphecyChainPosition]]]
            type = int
        [[[IsEnabled]]]
            type = bool
        [[[SealCost_Normal]]]
            type = int
        [[[SealCost_Cruel]]]
            type = int
        [[[SealCost_Merciless]]]
            type = int
        [[[Flag1]]]
            type = bool
[ProphecyChain.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = int
        [[[Unknown3]]]
            type = ref|list|int
        [[[Unknown2]]]
            type = int
        [[[Unknown4]]]
            type = ref|list|int
[ProphecyType.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[UnknownUnique]]]
            type = int
            unique = True
[OldMapStashTabLayout.dat]
[Orientations.dat]
[PVPTypes.dat]
    [[fields]]
[Quest.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Act]]]
            type = int
        [[[Name]]]
            type = ref|string
        [[[QuestState]]]
            #todo
            display = QuestState?
            type = int
        [[[Icon_DDSFile]]]
            type = ref|string
            file_path = True
            file_ext = .dds
        [[[QuestId]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[Unknown6]]]
            #display_type = 0b{0:08b}
            type = ubyte
        [[[IsQuest]]]
            display = IsQuest?
            type = bool
        [[[Unknown8]]]
            type = byte
        [[[Unknown9]]]
            type = byte
        [[[Flag1]]]
            type = bool
        [[[Unknown11]]]
            #display_type = 0b{0:08b}
            type = int
        [[[Flag2]]]
            type = bool
        [[[Flag3]]]
            type = bool
[QuestAchievements.dat]
    [[fields]]
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[QuestState]]]
            type = int
        [[[IsHardcoreAchievement]]]
            type = bool
        [[[IsStandardAchievement]]]
            type = bool
        [[[DifficultiesKey]]]
            type = ulong
            key = Difficulties.dat
        [[[Unknown1]]]
            type = int
[QuestFlags.dat]
    [[fields]]
[QuestRewards.dat]
    [[fields]]
        [[[QuestKey]]]
            type = ulong
            key = Quest.dat
        [[[Difficulty]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[CharactersKey]]]
            type = ulong
            key = Characters.dat
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[ItemLevel]]]
            type = int
        [[[Rarity]]]
            type = int
            description = '1=Normal, 2=Magic, 3=Rare'
            #TODO RARITY constant
        [[[Unknown9]]]
            type = int
        [[[SocketGems]]]
            type = ref|string
        [[[Key0]]]
            type = ulong
        [[[Key1]]]
            type = ulong
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = bool
[QuestStates.dat]
    [[fields]]
        [[[QuestKey]]]
            type = ulong
            key = Quest.dat
        [[[Unknown0]]]
            type = int
        [[[QuestStates]]]
            type = ref|list|uint
        [[[Data1]]]
            type = ref|list|uint
        [[[Text]]]
            type = ref|string
        [[[Flag0]]]
            type = bool
        [[[Message]]]
            type = ref|string
        [[[MapPinsKeys1]]]
            type = ref|list|ulong
            key = MapPins.dat
        [[[Unknown1]]]
            type = int
        [[[MapPinsTexts]]]
            type = ref|list|ref|string
        [[[MapPinsKeys2]]]
            type = ref|list|long
            key = MapPins.dat
        [[[Keys2]]]
            type = ref|list|ulong
        [[[QuestFinished_OGGFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[Unknown2]]]
            type = bool
        [[[Unknown3]]]
            type = ref|list|int
[QuestStaticRewards.dat]
    [[fields]]
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[StatsKey]]]
            type = ulong
            key = BaseItemTypes.dat
        [[[StatValue]]]
            type = int
        [[[DifficultyKey]]]
            type = ulong
            key = Difficulties.dat
        [[[QuestKey]]]
            type = ulong
            key = Quest.dat
        [[[Unknown2]]]
            type = int
[QuestVendorRewards.dat]
   [[fields]]
        [[[Id]]]
            type = int
            unique = True
        [[[NPCKey]]]
            type = ulong
            key = NPCs.dat
        [[[QuestState]]]
            type = int
        [[[CharactersKeys]]]
            type = ref|list|ulong
            key = Characters.dat
        [[[BaseItemTypesKeys]]]
            type = ref|list|ulong
            key = BaseItemTypes.dat
        [[[Flag0]]]
            type = bool
[RaceAreas.dat]
    [[fields]]
        [[[RacesKey]]]
            type = ulong
            key = Races.dat
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Keys0]]]
            type = ref|list|ulong
        # TODO: No entries, dont know data size
        [[[Keys1]]]
            type = ref|list|int
[RaceTimes.dat]
    [[fields]]
        [[[RacesKey]]]
            type = ulong
            key = Races.dat
        [[[Index]]]
            type = int
        [[[StartUNIXTime]]]
            type = int
        [[[EndUNIXTime]]]
            type = int
[Races.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Data0]]]
            type = ref|list|int
        [[[Data1]]]
            type = ref|list|int
        [[[Unknown1]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
[RandomUniqueMonsters.dat]
    [[fields]]
        [[[Unknown0]]]
            #TODO
            display = MonsterPacksKey?
            type = long
        [[[Data0]]]
            type = ref|list|long
[Rarity.dat]
    [[fields]]
[Realms.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Name]]]
            type = ref|string
        [[[Server]]]
            type = ref|list|ref|string
        [[[IsEnabled]]]
            type = bool
        [[[Server2]]]
            type = ref|list|ref|string
        [[[ShortName]]]
            type = ref|string
        [[[Data0]]]
            type = ref|list|int
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
[RelativeImportanceConstants.dat]
    [[fields]]
[RogueExiles.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Flag0]]]
            type = bool
[RunicCircles.dat]
    [[fields]]
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
[ShieldTypes.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Block]]]
            type = int
[ShopCategory.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ClientText]]]
            type = ref|string
        [[[ClientJPGFile]]]
            type = ref|string
            file_path = True
            file_ext = .jpg
        [[[WebsiteText]]]
            type = ref|string
        [[[WebsiteJPGFile]]]
            type = ref|string
        [[[Unknown5]]]
            type = ref|int
[ShopCountry.dat]
    [[fields]]
        [[[CountryTwoLetterCode]]]
            type = ref|string
        [[[Country]]]
            type = ref|string
        [[[ShopCurrencyKey]]]
            type = ulong
            key = ShopCurrency.dat
[ShopCurrency.dat]
    [[fields]]
        [[[CurrencyCode]]]
            type = ref|string
        [[[CurrencySign]]]
            type = ref|string
[ShopItem.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Name]]]
            type = ref|string
        [[[Description]]]
            type = ref|string
        [[[Package_ShopItemKeys]]]
            type = ref|list|int
            key = ShopItem.dat
        [[[Package_Values]]]
            type = ref|list|int
        [[[ShopCategoryKeys]]]
            type = ref|list|ulong
            key = ShopCategory.dat
        [[[SmallArt_JPGFile]]]
            type = ref|string
            file_path = True
            file_ext = .jpg
        [[[YoutubeVideo]]]
            type = ref|string
        [[[Unknown11]]]
            type = ref|string
        [[[LargeArt_JPGFile]]]
            type = ref|string
            file_path = True
            file_ext = .jpg
        [[[Description2]]]
            type = ref|string
        [[[DailyDealArt_JPGFile]]]
            type = ref|string
            file_path = True
            file_ext = .jpg
        [[[Unknown15]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[IsTencentItem]]]
            type = bool
        [[[IsTradeable]]]
            type = bool
[ShopItemPrice.dat]
    [[fields]]
        [[[ShopItemKey]]]
            type = ulong
            key = ShopItem.dat
        [[[ShopRegionKey]]]
            type = ulong
            key = ShopRegion.dat
        [[[Price]]]
            type = int
[ShopPaymentPackage.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
        [[[Coins]]]
            type = int
        [[[AvailableFlag]]]
            type = bool
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[ContainsBetaKey]]]
            type = bool
        [[[Data0]]]
            type = ref|list|int
        [[[Key0]]]
            type = ulong
        [[[BackgroundImage]]]
            type = ref|string
            file_path = True
        [[[Unknown5]]]
            type = ref|string
        [[[Flag1]]]
            type = bool
        [[[Upgrade_ShopPaymentPackageKey]]]
            type = int
            key = ShopPaymentPackage.dat
        [[[PhysicalItemPoints]]]
            type = int
            description = "Number of points the user gets back if they opt-out of physical items"
[ShopPaymentPackageItems.dat]
    [[fields]]
        [[[Id]]]
            type = int
            unique = True
        [[[ShopPaymentPackageKey]]]
            type = ulong
            key = ShopPaymentPackage.dat
        [[[ShopItemKey]]]
            type = ulong
            key = ShopItem.dat
        [[[Unknown0]]]
            type = ref|string
        [[[ShopTokenKey]]]
            type = ulong
            key = ShopToken.dat
[ShopPaymentPackagePrice.dat]
    [[fields]]
        [[[ShopPaymentPackageKey]]]
            type = ulong
            key = ShopPaymentPackage.dat
        # Could be ShopCurrency.dat as well
        [[[ShopCountryKey]]]
            type = ulong
            key = ShopCountry.dat
        [[[Price]]]
            type = int
[ShopRegion.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
[ShopToken.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[TypeId]]]
            type = ref|string
        [[[Description]]]
            type = ref|string
[ShrineBuffs.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[BuffStatValues]]]
            type = ref|list|int
            description = For use for the related stat in the buff.
        [[[BuffDefinitionsKey]]]
            type = ulong
            key = BuffDefinitions.dat
        [[[Key0]]]
            type = ulong
[ShrineSounds.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[StereoSoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[MonoSoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
[Shrines.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = int
        [[[Name]]]
            type = ref|string
        [[[ChargesShared]]]
            type = bool
            display = ChargesShared?
        [[[Player_ShrineBuffsKey]]]
            type = ulong
            key = ShrineBuffs.dat
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[Description]]]
            type = ref|string
        [[[Monster_ShrineBuffsKey]]]
            type = ulong
            key = ShrineBuffs.dat
        [[[SummonMonster_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
            description = The aoe ground effects for example
        [[[SummonPlayer_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
            description = The aoe ground effects for example
        [[[Unknown10]]]
            type = int
        [[[Unknown11]]]
            type = int
        [[[ShrineSoundsKey]]]
            type = ulong
            key = ShrineSounds.dat
        [[[Unknown14]]]
            type = bool
        [[[AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[IsPVPOnly]]]
            type = bool
        [[[Unknown17]]]
            type = bool
        [[[IsLesserShrine]]]
            type = bool
[SkillGems.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[GrantedEffectsKey]]]
            type = ulong
            key = GrantedEffects.dat
        [[[Str]]]
            type = int
        [[[Dex]]]
            type = int
        [[[Int]]]
            type = int
        [[[GemTagsKeys]]]
            type = ref|list|ulong
            key = GemTags.dat
        [[[VaalVariant_BaseItemTypesKey]]]
            type = long
            key = BaseItemTypes.dat
        [[[Flag0]]]
            type = bool
[SkillTotemVariations.dat]
    [[fields]]
        [[[SkillTotemsKey]]]
            type = int
            key = SkillTotems.dat
            key_offset = 1
        [[[TotemSkinId]]]
            type = int
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
[SkillTotems.dat]
    [[fields]]
[SoundEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SoundFile]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[SoundFile_2D]]]
            type = ref|string
            file_path = True
            file_ext = .ogg
        [[[Unknown3]]]
            type = bool
[StatDescriptionFunctions.dat]
    [[fields]]
[Stats.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Flag0]]]
            type = bool
        [[[IsLocal]]]
            type = bool
        # true iff MainHandAlias_StatsKey and/or OffHandAlias_StatsKey are not None
        [[[IsWeaponLocal]]]
            type = bool
        [[[Unknown2]]]
            type = int
        [[[Flag3]]]
            type = bool
        [[[Text]]]
            type = ref|string
        [[[Flag5]]]
            type = bool
        [[[Flag6]]]
            type = bool
        # for some reason ints... maybe cause same file?
        # value of the stat is added to MainHandAlias_StatsKey if weapon is in main-hand
        [[[MainHandAlias_StatsKey]]]
            type = int
            key = Stats.dat
        # value of the stat is added to OffHandAlias_StatsKey if weapon is in off-hand
        [[[OffHandAlias_StatsKey]]]
            type = int
            key = Stats.dat
        [[[Flag7]]]
            type = bool
        [[[Unknown3]]]
            type = int
        [[[Unknown0]]]
            type = ref|list|int
[StatSemantics.dat]
    [[fields]]
[StrDexIntMissionExtraRequirement.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[TimeLimit]]]
            type = int
            description = in milliseconds
        [[[HasTimeBonusPerKill]]]
            type = bool
        [[[HasTimeBonusPerObjectTagged]]]
            type = bool
        [[[HasLimitedPortals]]]
            type = bool
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[TimeLimitBonusFromObjective]]]
            type = int
            description = in milliseconds
        [[[ObjectCount]]]
            type = int
[StrDexIntMissionMaps.dat]
    [[fields]]
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[MapBoss_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
[StrDexIntMissionMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[IsUniqueMap]]]
            type = bool
[StrDexIntMissionUniqueMaps.dat]
    [[fields]]
        # TODO maybe envrionments.dat?
        [[[Key0]]]
            type = ulong
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[MapBoss_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
[StrDexIntMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[HasObjectiveBossKill]]]
            type = bool
        [[[HasObjectiveFullClear]]]
            type = bool
        [[[Extra_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[HasObjectiveKillExiles]]]
            type = bool
        [[[HasObjectiveFindUnique]]]
            type = bool
        [[[Key0]]]
            type = ulong
        [[[HasObjectiveCompleteMasterMission]]]
            type = bool
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[MonsterPacksKey]]]
            type = ulong
            key = MonsterPacks.dat
        [[[ObjectCountRequired]]]
            type = int
        [[[ObjectCountTotal]]]
            type = int
        [[[AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
[StrDexMissionArchetypes.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[StrDexMissionMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[ModsKeys]]]
            type = ref|list|long
            key = Mods.dat
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[StrDexMissionSpecialMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        # TODO: verify
        [[[ModsKeys]]]
            type = ref|list|long
            key = Mods.dat
        [[[Key0]]]
            type = ulong
[StrDexMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[TimeLimit]]]
            type = int
            description = in milliseconds
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Dummy_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[DummyCount]]]
            type = int
        # TODO verify
        [[[DummySpawnTimer]]]
            type = int
            description = in milliseconds
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[Allies_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Unknown12]]]
            type = int
        [[[Traps_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
[StrIntMissionMonsterWaves.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterPacksKey]]]
            type = ulong
            key = MonsterPacks.dat
        # todo verify, or packcount
        [[[WaveCount]]]
            type = int
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[PackTimer]]]
            type = int
            description = in milliseconds
        [[[TimeLimit]]]
            type = int
            description = in milliseconds
        [[[Unique_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Key0]]]
            type = ulong
        [[[Unknown13]]]
            type = ref|list|int
        [[[UniqueCount]]]
            type = int
[StrIntMissionRelicMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ModsKeys]]]
            type = ref|list|long
            key = Mods.dat
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
[StrIntMissionRelicPatterns.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[AllyRelicCount]]]
            type = int
        [[[Unknown]]]
            type = int
        [[[Relic_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[IsEnemyRelic]]]
            type = bool
        [[[IsAllyRelic]]]
            type = bool
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[EnemyRelicCount]]]
            type = int
[StrIntMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[Relic_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[f9]]]
            type = int
        [[[HasTimeLimit]]]
            type = bool
        [[[TimeLimit]]]
            type = int
            description = in milliseconds
        # Todo: no idea what the difference is
        [[[IsDestroyRelic1]]]
            type = bool
        [[[IsDestroyRelic2]]]
            type = bool
        [[[FeedRequired]]]
            type = int
        [[[f12]]]
            type = int
        [[[RelicModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
[StrMapMods.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[ModsKey]]]
            type = ulong
            key = Mods.dat
[StrMissionBosses.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
[StrMissionMapModNumbers.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        # Probably key or number of mods; all 0 atm
        [[[Unknown0]]]
            type = int
        [[[Unknown1]]]
            type = int
[StrMissionSpiritEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Key0]]]
            type = long
        [[[Data1]]]
            type = ref|list|int
        [[[Summon_MonsterVarietiesKeys]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[GroundEffect_MonsterVarietiesKeys]]]
            type = ulong
            key = MonsterVarieties.dat
        # Ground EffectSpawnWeight & multiplier?
        [[[GroundEffectUnknown0]]]
            type = int
        [[[GroundEffectUnknown1]]]
            type = int
        [[[Key3]]]
            type = long
        [[[b1]]]
            type = bool
        [[[b2]]]
            type = bool
[StrMissionSpiritSecondaryEffects.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Key0]]]
            type = ulong
        [[[f7]]]
            type = int
        [[[f8]]]
            type = int
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Key2]]]
            type = ulong
[StrMissions.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[NPCTalkKey]]]
            type = ulong
            key = NPCTalk.dat
        [[[f7]]]
            type = int
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[f10]]]
            type = int
        [[[f11]]]
            type = int
        [[[f12]]]
            type = int
        [[[f13]]]
            type = int
        [[[b1]]]
            type = bool
        [[[b2]]]
            type = bool
[Strongboxes.dat]
    [[fields]]
        [[[ChestsKey]]]
            type = ulong
            key = Chests.dat
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[Unknown1]]]
            type = int
        [[[IsCartographerBox]]]
            type = bool
[SummonedSpecificBarrels.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ChestsKey]]]
            type = ulong
            key = Chests.dat
        [[[Key1]]]
            type = ulong
        [[[Unknown3]]]
            type = int
        [[[Key2]]]
            type = ulong
[SummonedSpecificMonsters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown3]]]
            type = int
        # TODO unknownKey
        [[[Key0]]]
            type = ulong
[SummonedSpecificMonstersOnDeath.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown2]]]
            type = int
        [[[Key1]]]
            type = ulong
        [[[Unknown4]]]
            type = int
        [[[Unknown7]]]
            type = byte
[SupporterPackSets.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[FormatTitle]]]
            type = ref|string
        [[[Background]]]
            type = ref|string
        [[[Time0]]]
            type = ref|string
        [[[Time1]]]
            type = ref|string
[Tags.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = uint
            #display_type = "{0:#032b}"
[TalismanMonsterMods.dat]
    [[fields]]
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Key0]]]
            type = ulong
[TalismanPacks.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
        [[[MonsterPacksKeys]]]
            type = ref|list|ulong
            key = MonsterPacks.dat
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown8]]]
            type = int
        [[[Unknown9]]]
            type = int
        [[[Unknown10]]]
            type = int
        [[[Unknown11]]]
            type = int
        [[[MonsterPacksKey]]]
            type = ulong
            key = MonsterPacks.dat
[Talismans.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[SpawnWeight]]]
            type = int
        [[[ModsKey]]]
            type = ulong
            key = Mods.dat
        [[[Tier]]]
            type = int
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[Key0]]]
            type = ulong
        [[[Key1]]]
            type = ulong
        [[[Unknown11]]]
            type = int
[TerrainPlugins.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[UnknownUnique]]]
            type = int
            unique = True
[Tips.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
[Topologies.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[DGRFile]]]
            type = ref|string
            file_path = True
            file_ext = .dgr
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[EnvironmentsKey]]]
            type = ulong
            key = Environments.dat
[TormentSpirits.dat]
    [[fields]]
        [[[MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Spirit_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Touched_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Possessed_ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[MinZoneLevel]]]
            type = int
        [[[MaxZoneLevel]]]
            type = int
        [[[SpawnWeight]]]
            type = int
        [[[SummonedMonster_MonsterVarietiesKey]]]
            type = ulong
            key = MonsterVarieties.dat
        [[[Unknown13]]]
            type = int
        [[[ModsKeys0]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[ModsKeys1]]]
            type = ref|list|ulong
            key = Mods.dat
[TriggerSpawners.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Data0]]]
            type = ref|list|int
        [[[Unknown0]]]
            type = int
        [[[Data1]]]
            type = ref|list|int
        [[[Flag0]]]
            type = bool
[UniqueChests.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[ChestsKey]]]
            type = ulong
            key = Chests.dat
        [[[WordsKey]]]
            type = ulong
            key = Words.dat
        [[[MinLevel]]]
            type = int
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[SpawnWeight]]]
            type = int
        [[[Data1]]]
            type = ref|list|int
        [[[AOFile]]]
            type = ref|string
            file_path = True
            file_ext = .ao
        [[[Flag0]]]
            type = bool
        [[[Data2]]]
            type = ref|list|uint
        [[[Key0]]]
            type = ulong
        [[[Key1]]]
            type = ulong
[UniqueJewelLimits.dat]
    [[fields]]
        [[[UniqueItemsKey]]]
            type = ulong
        [[[Limit]]]
            type = int
[UniqueSetNames.dat]
    [[fields]]
[UniqueSets.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown0]]]
            type = int
        [[[WordsKey]]]
            type = ulong
            key = Words.dat
        [[[Unknown2]]]
            type = int
        [[[Flag0]]]
            type = bool
[VoteState.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
[VoteType.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Text]]]
            type = ref|string
        [[[AcceptText]]]
            type = ref|string
        [[[RejectText]]]
            type = ref|string
        [[[Unknown0]]]
            type = int
[WarbandsGraph.dat]
    [[fields]]
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Connections]]]
            type = ref|list|int
[WarbandsMapGraph.dat]
    [[fields]]
        [[[WorldAreasKey]]]
            type = ulong
            key = WorldAreas.dat
        [[[Connections]]]
            type = ref|list|int
[WarbandsPackMonsters.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = long
        [[[Unknown3]]]
            type = int
        [[[Tier4_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Tier3_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Tier2_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Tier1_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Tier1Name]]]
            type = ref|string
        [[[Tier2Name]]]
            type = ref|string
        [[[Tier3Name]]]
            type = ref|string
        [[[Tier4Name]]]
            type = ref|string
        [[[Tier1Art]]]
            type = ref|string
        [[[Tier2Art]]]
            type = ref|string
        [[[Tier3Art]]]
            type = ref|string
        [[[Tier4Art]]]
            type = ref|string
[WarbandsPackNumbers.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[SpawnChance]]]
            display = SpawnChance?
            type = int
        [[[MinLevel]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[Tier4Number]]]
            type = int
        [[[Unknown5]]]
            type = int
        [[[Tier3Number]]]
            type = int
        [[[Unknown7]]]
            type = int
        [[[Tier2Number]]]
            type = int
        [[[Unknown9]]]
            type = int
        [[[Tier1Number]]]
            type = int
[WeaponArmourCommon.dat]
    [[fields]]
[WeaponClasses.dat]
    [[fields]]
[WeaponDamageScaling.dat]
    [[fields]]
[WeaponImpactSoundData.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Unknown1]]]
            type = int
        [[[Unknown2]]]
            type = int
        [[[Unknown3]]]
            type = int
        [[[Unknown4]]]
            type = int
        [[[Unknown5]]]
            type = int
[WeaponSoundTypes.dat]
    [[fields]]
[WeaponTypes.dat]
    [[fields]]
        [[[BaseItemTypesKey]]]
            type = ulong
            key = BaseItemTypes.dat
            unique = True
        [[[Critical]]]
            type = int
        [[[Speed]]]
            type = int
            description = 1000 / speed -> attacks per second
        [[[DamageMin]]]
            type = int
        [[[DamageMax]]]
            type = int
        [[[RangeMax]]]
            type = int
        [[[Null6]]]
            type = int
[Wordlists.dat]
    [[fields]]
[Words.dat]
    [[fields]]
        [[[Type]]]
            type = int
            description = "1 Prefix\n2 Suffix\n3 Monster base\n4 Monster adjective\n5 monster suffix\n6unique item\n7 prefix box\n8 suffix box"
        [[[Text]]]
            type = ref|string
        [[[SpawnWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SpawnWeight_Values]]]
            type = ref|list|uint
        [[[Unknown6]]]
            type = int
        [[[Text2]]]
            type = ref|string
        [[[Unknown8]]]
            type = ref|string
[WorldAreas.dat]
    [[fields]]
        [[[Id]]]
            type = ref|string
            unique = True
        [[[Name]]]
            type = ref|string
        [[[Act]]]
            type = int
        [[[IsTown]]]
            type = bool
        [[[HasWaypoint]]]
            type = bool
        [[[Connections_WorldAreasKeys]]]
            type = ref|list|uint
            key = WorldAreas.dat
        [[[AreaLevel]]]
            type = int
        [[[HasDoodads]]]
            type = bool
        [[[Unknown6]]]
            type = int
        [[[Unknown7]]]
            type = int
        [[[Unknown8]]]
            type = int
        [[[Unknown9]]]
            type = int
        [[[LoadingScreen_DDSFile]]]
            type = ref|string
            file_ext = .dds
            file_path = True
        [[[Unknown11]]]
            type = int
        [[[Data1]]]
            type = ref|list|uint
        [[[Unknown15]]]
            type = int
        [[[TopologiesKeys]]]
            type = ref|list|ulong
            key = Topologies.dat
        [[[ParentTown_WorldAreasKey]]]
            type = uint
            key = WorldAreas.dat
        [[[DifficultiesKey]]]
            type = ulong
            key = Difficulties.dat
        [[[Unknown21]]]
            type = int
        [[[Unknown22]]]
            type = int
        [[[Unknown23]]]
            type = int
        [[[Bosses_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[Monsters_MonsterVarietiesKeys]]]
            type = ref|list|ulong
            key = MonsterVarieties.dat
        [[[SpawnWeight_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[SpawnWeight_Values]]]
            type = ref|list|uint
        [[[IsMap]]]
            type = bool
        [[[FullClear_AchievementItemsKeys]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Unknown32]]]
            type = int
        [[[Unknown33]]]
            type = int
        [[[AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[ModsKeys]]]
            type = ref|list|ulong
            key = Mods.dat
        [[[Unknown39]]]
            type = int
        [[[Unknown40]]]
            type = int
        [[[VaalArea_WorldAreasKeys]]]
            type = ref|list|int
            key = WorldAreas.dat
        [[[VaalArea_SpawnChance]]]
            type = int
        [[[Strongbox_SpawnChance]]]
            type = int
        [[[Strongbox_MaxCount]]]
            type = int
        [[[Strongbox_RarityWeight]]]
            type = ref|list|int
            description = 'Normal/Magic/Rare/Unique spawn distribution'
        [[[IsTownArea]]]
            type = bool
        [[[Unknown49]]]
            type = int
        [[[MaxLevel]]]
            type = int
        [[[AreaType_TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[Unknown50]]]
            type = int
        [[[IsMercilessVaalArea]]]
            type = bool
        [[[Unknown52]]]
            type = int
        [[[IsHideout]]]
            type = bool
        [[[Unknown53]]]
            type = int
        [[[Unknown54]]]
            type = int
        [[[Unknown55]]]
            type = int
        [[[Unknown56]]]
            type = int
        [[[UnknownIndex]]]
            type = ref|string
        [[[Unknown59]]]
            type = int
        [[[Unknown60]]]
            type = int
        [[[Unknown61]]]
            type = int
        [[[TagsKeys]]]
            type = ref|list|ulong
            key = Tags.dat
        [[[IsVaalArea]]]
            type = bool
        [[[Unknown64]]]
            type = int
        [[[Unknown65]]]
            type = int
        [[[Unknown66]]]
            type = int
        [[[IsLabyrinthAirlock]]]
            type = bool
        [[[IsLabyrinthArea]]]
            type = bool
        [[[TwinnedFullClear_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[Enter_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[Unknown73]]]
            type = int
        [[[Unknown74]]]
            type = int
        [[[Unknown75]]]
            type = int
        [[[Unknown76]]]
            type = ref|string
        [[[8ModsFullClear_AchievementItemsKey]]]
            type = ulong
            key = AchievementItems.dat
        [[[Unknown77]]]
            type = int
        [[[Unknown78]]]
            type = int
        [[[Unknown79]]]
            type = int
        [[[Keys1]]]
            type = ref|list|ulong
            key = AchievementItems.dat
        [[[Flag0]]]
            type = bool
        [[[Flag1]]]
            type = bool
        [[[Unknown82]]]
            type = int
        [[[Unknown83]]]
            type = int
        [[[Keys2]]]
            type = ref|list|ulong
        [[[Key0a]]]
            type = ulong
        [[[Key0b]]]
            type = ulong
        [[[Unknown88]]]
            type = ref|string
        # Identical with Unknown 82?
        [[[Unknown89]]]
            type = int
        [[[Unknown90]]]
            type = int
        # Added with Legacy. Maybe governing spawn chances?
        [[[Unknown91]]]
            type = int
        [[[Unknown92]]]
            type = int
        [[[Unknown93]]]
            type = int
[XPPerLevelForMissions.dat]
    [[fields]]
        [[[ZoneLevel]]]
            type = int
        [[[Experience]]]
            type = int
