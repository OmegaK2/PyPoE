"""
Shared Python code

Overview
===============================================================================

+----------+------------------------------------------------------------------+
| Path     | PyPoE/shared/__init__.py                                         |
+----------+------------------------------------------------------------------+
| Version  | 1.0.0a0                                                          |
+----------+------------------------------------------------------------------+
| Revision | $Id$                  |
+----------+------------------------------------------------------------------+
| Author   | Omega_K2                                                         |
+----------+------------------------------------------------------------------+

Description
===============================================================================



Agreement
===============================================================================

See PyPoE/LICENSE
"""

# =============================================================================
# Imports
# =============================================================================

# Python

# 3rd-party

# self

# =============================================================================
# Globals
# =============================================================================

__all__ = []

# =============================================================================
# Classes
# =============================================================================


class InheritedDocStringsMeta(type):
    def __new__(cls, name, args, attrs):
        if not ('__doc__' in attrs and attrs['__doc__']):
            for mro in cls.mro(cls):
                docstring = mro.__doc__
                if docstring is not None:
                    cls.__doc__ = docstring
                    # attrs['__doc__'] = docstring
                    break
        for attr, attribute in attrs.items():
            if attribute.__doc__:
                continue

            for mro in cls.mro(cls):
                if not hasattr(mro, attr):
                    break
                docstring = getattr(mro, attr).__doc__
                if docstring is not None:
                    attribute.__doc__ = docstring
                    break

        return type.__new__(cls, name, args, attrs)


# =============================================================================
# Functions
# =============================================================================
